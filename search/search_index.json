{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#insert-repo-name-info","title":"Insert Repo Name Info","text":"<p>Describe what types of data your product repo contains and what functionality it provides in Aspire.</p>"},{"location":"#objects-contained-within-repo","title":"Objects contained within repo","text":""},{"location":"#stage","title":"<code>Stage</code>","text":"<ul> <li>Object Name &amp; Description</li> </ul>"},{"location":"#rdv","title":"<code>RDV</code>","text":""},{"location":"#hub","title":"<code>Hub</code>","text":"<ul> <li>Object Name &amp; Description</li> </ul>"},{"location":"#satellite","title":"<code>Satellite</code>","text":"<ul> <li>Object Name &amp; Description</li> </ul>"},{"location":"#link","title":"<code>Link</code>","text":"<ul> <li>Object Name &amp; Description</li> </ul>"},{"location":"#bdv","title":"<code>BDV</code>","text":"<ul> <li>Object Name &amp; Description</li> </ul>"},{"location":"#pl","title":"<code>PL</code>","text":""},{"location":"#fact","title":"<code>Fact</code>","text":"<ul> <li>Object Name &amp; Description</li> </ul>"},{"location":"#dimension","title":"<code>Dimension</code>","text":"<ul> <li>Object Name &amp; Description</li> </ul>"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP/","title":"FDBK_CSAT_SURVEY_REP","text":"<p>Last Edited: 04/07/2023</p>"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP/#description","title":"Description","text":"<p>This table contain survey response details for each CSAT survey that has been completed by a customer. This table contains all of the header data for an individual response, including the date of the visit, the date of the survey and the store visited (where relevant). If available a link to the survey responder's Nectar account is also available. There will be one row in this table for each survey response. This table is used to populate FLF_CSAT_SURVEY with survey responses.</p>"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP/#selection-criteria","title":"Selection Criteria","text":"<p>This BDV object contains two sources (SMG Survey and Qualtrics Survey), as a result we must identify which data we want to take from each source and ensure no duplication in the data. </p> <p>Valid Records from RDV <pre><code>RECORD_DELETED_FLAG_FLAG = 'N'\n</code></pre> Survey Project Criteria <pre><code>SURVEY_PROJECT_ID IN (\n'SMG_INSTORE',           -- SMG Instore Survey (Historical)\n'SMG_ONLINE',            --SMG GOL Survey (Historical)\n'SMG_POPUP',             --SMG Popup Survey (Historical)\n'SMG_FEEDBACK',          --SMG Feedback Survey (Historical)\n'SV_cZnMPk9qqMRo5fL',    --Lettuce Know - Instore\n'SV_6MtlOGAxp9i54GO',    --Sainsbury's - GOL Delivery\n'SV_5okht3tJXHtv0ma',    --Sainsburys - Pop Up Survey\n'SV_0eXofGHBALFYUwC',    --Sainsburys - Feedback button\n'SV_5bsA1xNDWa2My8t',    --Tu CSAT\n'SV_5oODvo2t9M3Na5L',    --Contact Centre: Habitat post call SMS survey\n'SV_6eTJrAcmCQvLf5b',    --Contact Centre: Tu Clothing post call SMS survey - Argos\n'SV_24DeJwD5LkUQxoy',    -- Contact Centre: Argos Deflection post call SMS survey\n'SV_87dKDEgmCsxovSl',    --Contact Centre: Sainsbury's Careline post call SMS survey\n'SV_a3K1kBQbqNMvcbP',    --Contact Centre: Sainsbury's GOL post call SMS survey\n'SV_bqPEsEHROd17xum',    --Contact Centre: Nectar post call SMS survey\n'SV_cFOhrO8drcUbDa5',    --Contact Centre: Argos post call SMS survey\n'SV_6VDlpwWS8tuYjD8',    --Argos Installation SMS Survey\n'SV_2rSvStLzycecZOm',    --Argos Popup Survey \n'SV_8B9js5zeIDa9UV0',    --Argos Feedback Survey\n'SV_9vl3g4QgMWDwyuG',    --Argos Driver Feedback SMS Survey\n'SV_3UJeDf9c1VsHVYO'     --Argos E2E Survey\n)\n</code></pre></p>"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP/#target-to-source","title":"Target to Source","text":"<p>These tables are assumed to be unioned and/or Left Join in the spec and will have the name FSL, FSQS, NCCPUL, STML, FSAL, FSAML, MTHL and DS as aliases:</p> <ul> <li><code>FDBK_SURVEY_LINK</code> as <code>FSL</code></li> <li><code>FDBK_SURVEY_QUALTRICS_SAT</code> as <code>FSQS</code></li> <li><code>NCTR_CLLCTR_CRD_PF_URN_LINK</code> as <code>NCCPUL</code></li> <li><code>SALES_TRANSACTION_MEASURE_LINK</code> as <code>STML</code></li> <li><code>FDBK_SURVEY_ANSWER_LINK</code> as <code>FSAL</code></li> <li><code>FDBK_SURVEY_AMEND_METADATA_LINK</code> as <code>FSAML</code></li> <li><code>MISSION_TRANS_HDR_LINK</code> as <code>MTHL</code></li> <li><code>DIM_STORE_SMART_SHOP_TYPE_HIST</code> as <code>DSSSTH</code></li> <li><code>DIM_STORE</code> as <code>DS</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target Column Source System Source Table/Xpath/JSON Schema/Other Source Column Transformation/Mapping rules Transformation/Mapping rules.1 Transformation/Mapping rules.2 Transformation/Mapping rules.3 Transformation/Mapping rules.4 Transformation/Mapping rules.5 Transformation/Mapping rules.6 SURVEY_PROJECT_ID ADW_RDV FDBK_SURVEY_LINK, FDBK_SURVEY_QUALTRICS_SAT SURVEY_PROJECT_ID sl.SURVEY_NK2 AS SURVEY_PROJECT_ID Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D SURVEY_ID ADW_RDV FDBK_SURVEY_LINK SURVEY_ID , sl.SURVEY_NK1 AS SURVEY_ID Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT NECTAR_COLLECTOR_CARD_NUM ADW_RDV nctr_cllctr_crd_pf_urn_link NECTAR_COLLECTOR_CARD_NUM , min(sl.loyaltyid) AS NECTAR_COLLECTOR_CARD_NUM Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D TRANSACTION_KEY ADW_RDV SALES_TRANSACTION_MEASURE_LINK TRANSACTION_KEY , min(sl.TRANSACTION_KEY) AS TRANSACTION_KEY Same as Column D Same as Column D Same as Column D SUBSTRING(FDBK_SURVEY_QUALTRICS_SAT.TRANSACTION_KEY, 1, 18) Same as column H Same as Column D STORE_CD ADW_RDV FDBK_SURVEY_LINK STORE_CD , min(TRY_CAST(CASE WHEN sl.VISIT_STORE_NK1 = '~~'  THEN NULL ELSE sl.VISIT_STORE_NK1 END AS NUMBER)) AS STORE_CD Same as Column D Same as Column D Same as Column D Strip leading zeros from sl.VISIT_STORE_NK1 Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT then join to ADW_PROPERTY_PL.DIM_LOCATION.OP_CO_LOCATION_CD. Use value for ADW_PROPERTY_PL.DIM_LOCATION.LOCATION_CD (must be a 6 character code starting with 10) TILL_NUM ADW_RDV SALES_TRANSACTION_MEASURE_LINK TILL_NK1 Same as Column K Same as Column K Same as Column K Same as Column K If FDBK_SURVEY_QUALTRICS_SAT.TRANSACTION_KEY IS NULL THEN Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT TRANSACTION_KEY FDBK_SURVEY_QUALTRICS_SAT.TILL_NUMBER / Receipt journey / TILL_NUMBER Else SUBSTRING(FDBK_SURVEY_QUALTRICS_SAT.TRANSACTION_KEY, 9, 4) / Email journey / TRAN_DT ADW_RDV SALES_TRANSACTION_MEASURE_LINK TRAN_END_TS Same as Column K Same as Column K Same as Column K Same as Column K Set to NULL (transaction data not available in SALES_TRANSACTION_MEASURE_LINK for Argos) Same as column H Same as Column D TRAN_TM ADW_RDV SALES_TRANSACTION_MEASURE_LINK TRAN_END_TS Same as Column K Same as Column K Same as Column K Same as Column K Set to NULL (transaction data not available in SALES_TRANSACTION_MEASURE_LINK for Argos) Same as column H Same as Column D TRAN_NUMBER ADW_RDV FDBK_SURVEY_LINK TRAN_NUMBER , CAST(min(sl.TRAN_NUMBER) as NUMBER) as \"TRAN_NUMBER\" Same as Column D Same as Column D Same as Column D If FDBK_SURVEY_QUALTRICS_SAT.TRANSACTION_KEY IS NULL THEN Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT TRANSACTION_KEY FDBK_SURVEY_QUALTRICS_SAT.TRAN_NUMBER / Receipt journey / Else SUBSTRING(FDBK_SURVEY_QUALTRICS_SAT.TRANSACTION_KEY, 13, 16) / Email journey / SURVEY_TYPE ADW_RDV FDBK_SURVEY_LINK SURVEY_TYPE ADW_PROD.ADW_RDV.FDBK_SURVEY_QUALTRICS_SAT.SURVEY_CHANNEL_TYPE  AS VARCHAR(20) AS SURVEY_TYPE ADW_PROD.ADW_RDV.FDBK_SURVEY_QUALTRICS_SAT.SURVEY_CHANNEL_TYPE  AS VARCHAR(20) AS SURVEY_TYPE ADW_PROD.ADW_RDV.FDBK_SURVEY_QUALTRICS_SAT.SURVEY_CHANNEL_TYPE  AS VARCHAR(20) AS SURVEY_TYPE ADW_PROD.ADW_RDV.FDBK_SURVEY_QUALTRICS_SAT.SURVEY_CHANNEL_TYPE  AS VARCHAR(20) AS SURVEY_TYPE ADW_PROD.ADW_RDV.FDBK_SURVEY_QUALTRICS_SAT.SURVEY_CHANNEL_TYPE  AS VARCHAR(20) AS SURVEY_TYPE NOTE: ADW_PROD.ADW_RDV.FDBK_SURVEY_QUALTRICS_SAT.SURVEY_CHANNEL_TYPE may come in as 'FEEDBCK' rather than 'FEEDBACK for the Feedback Button survey (SV_8B9js5zeIDa9UV0) due to a historic typo in Qualtrics so hardcode in a check for this value and change it to 'FEEDBACK' if necessary ADW_PROD.ADW_RDV.FDBK_SURVEY_QUALTRICS_SAT.SURVEY_CHANNEL_TYPE  AS VARCHAR(20) AS SURVEY_TYPE FDBK_SURVEY_QUALTRICS_SAT If this value is NULL then hardcode based on SURVEY_PROJECT_ID: If this value is NULL then hardcode based on SURVEY_PROJECT_ID: WHEN 'SV_3UJeDf9c1VsHVYO' THEN 'E2E' ADW_PROD.ADW_RDV.FDBK_SURVEY_QUALTRICS_SAT.SURVEY_CHANNEL_TYPE  AS VARCHAR(20) AS SURVEY_TYPE WHEN 'SV_24DeJwD5LkUQxoy' THEN 'CMC' WHEN 'SV_9vl3g4QgMWDwyuG' THEN 'SMS' If this value is 'FEEDBCK' then correct to 'FEEDBACK' (see above note) WHEN 'SV_cFOhrO8drcUbDa5' THEN 'CMC' WHEN 'SV_6VDlpwWS8tuYjD8' THEN 'SMS' If this value is NULL then hardcode based on SURVEY_PROJECT_ID: WHEN 'SV_5oODvo2t9M3Na5L' THEN 'CMC' WHEN 'SV_3UJeDf9c1VsHVYO' THEN 'E2E' WHEN 'SV_bqPEsEHROd17xum' THEN 'CMC' WHEN 'SV_9vl3g4QgMWDwyuG' THEN 'SMS' WHEN 'SV_87dKDEgmCsxovSl' THEN 'CMC' WHEN 'SV_6VDlpwWS8tuYjD8' THEN 'SMS' WHEN 'SV_a3K1kBQbqNMvcbP' THEN 'CMC' WHEN 'SV_8B9js5zeIDa9UV0' THEN 'FEEDBACK WHEN 'SV_6eTJrAcmCQvLf5b' THEN 'CMC' WHEN 'SV_2rSvStLzycecZOm' THEN 'POPUP' VISIT_DATE ADW_RDV FDBK_SURVEY_LINK VISIT_DATE , min(DATE(sl.VISIT_DATE)) AS VISIT_DATE Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT VISIT_HOUR ADW_RDV FDBK_SURVEY_LINK VISIT_HOUR , min(HOUR(sl.VISIT_DATE)) AS VISIT_HOUR Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT TILL_TYPE_ID ADW_RDV FDBK_SURVEY_LINK TILL_TYPE_ID , min(cast(p1.answertext as NUMBER)) AS TILL_TYPE_ID Same as Column D Same as Column D Same as Column D No QID for till type for Argos so hardcode to NULL Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT SURVEY_DATETIME ADW_RDV FDBK_SURVEY_LINK SURVEY_DATETIME , min(sl.SURVEY_DATETIME) as SURVEY_DATETIME Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT SURVEY_DATE ADW_RDV FDBK_SURVEY_LINK SURVEY_DATE , min(DATE(sl.SURVEY_DATETIME)) AS SURVEY_DATE Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT SURVEY_HOUR ADW_RDV FDBK_SURVEY_LINK SURVEY_HOUR , min(HOUR(sl.SURVEY_DATETIME)) AS SURVEY_HOUR Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT UNIT_LOCAL_DATETIME ADW_RDV FDBK_SURVEY_LINK UNIT_LOCAL_DATETIME , min(sl.SURVEY_DATETIME) as UNIT_LOCAL_DATETIME Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT INVITE_TYPE ADW_RDV FDBK_SURVEY_LINK INVITE_TYPE , min(sl.INVITE_TYPE) AS INVITE_TYPE Same as Column D PopUp Feedback If UPPER(FDBK_SURVEY_QUALTRICS_SAT.INVITE_TYPE) LIKE 'EMAIL%' then hardcode to 'Email' otherwise use value of FDBK_SURVEY_QUALTRICS_SAT.INVITE_TYPE If UPPER(FDBK_SURVEY_QUALTRICS_SAT.INVITE_TYPE) LIKE 'EMAIL%' then hardcode to 'Email' otherwise use value of FDBK_SURVEY_QUALTRICS_SAT.INVITE_TYPE ADW_PROD.ADW_RDV.FDBK_SURVEY_QUALTRICS_SAT.INVITE_TYPE IS NULL AS SURVEY_TYPE FDBK_SURVEY_QUALTRICS_SAT If FDBK_SURVEY_QUALTRICS_SAT.INVITE_TYPE is NULL then hardcode based on SURVEY_PROJECT_ID: If FDBK_SURVEY_QUALTRICS_SAT.INVITE_TYPE is NULL then hardcode based on SURVEY_PROJECT_ID: If this value is NULL then hardcode based on SURVEY_PROJECT_ID: WHEN SURVEY_PROJECT_ID = 'SV_9vl3g4QgMWDwyuG' OR 'SV_6VDlpwWS8tuYjD8' THEN 'SMS' WHEN SURVEY_PROJECT_ID = 'SV_9vl3g4QgMWDwyuG' OR 'SV_6VDlpwWS8tuYjD8' THEN 'SMS' WHEN 'SV_24DeJwD5LkUQxoy' THEN 'SMS' WHEN SURVEY_PROJECT_ID = 'SV_8B9js5zeIDa9UV0' THEN 'Feedback' WHEN 'SV_cFOhrO8drcUbDa5' THEN 'SMS' WHEN SURVEY_PROJECT_ID = 'SV_2rSvStLzycecZOm' THEN 'PopUp' WHEN 'SV_5oODvo2t9M3Na5L' THEN 'SMS' WHEN 'SV_bqPEsEHROd17xum' THEN 'SMS' WHEN 'SV_87dKDEgmCsxovSl' THEN 'SMS' WHEN 'SV_a3K1kBQbqNMvcbP' THEN 'SMS' WHEN 'SV_6eTJrAcmCQvLf5b' THEN 'SMS' OVERALL_CSAT_SCORE ADW_RDV FDBK_SURVEY_LINK OVERALL_CSAT_SCORE , min(cast(p2.answertext as INTEGER)) AS OVERALL_CSAT_SCORE Ensure the OVERALL_CSAT_SCORE field logic for GOL Survey uses QID3 in  FDBK_SURVEY_ANSWER_LINK (QID3 ANSWER_NK3 / ANSWERTEXT) Use th same LOGIC as for Qualtrics INSTORE Survey -2 (N/A) Use FDBK_SURVEY_QUALTRICS_SAT.EQ For the Feedback Button survey (SV_8B9js5zeIDa9UV0) use the score for QID209_7 For CMC Surveys ('SV_24DeJwD5LkUQxoy','SV_cFOhrO8drcUbDa5','SV_5oODvo2t9M3Na5L','SV_bqPEsEHROd17xum','SV_87dKDEgmCsxovSl','SV_a3K1kBQbqNMvcbP','SV_6eTJrAcmCQvLf5b') OR QID20 or EQ If numeric [0-9] then leave as numeric For the Popup survey (SV_2rSvStLzycecZOm) use the score for QID238 ANSWER_NK1 = 'QID6' QUALTRICS: QUALTRICS: FDBK_SURVEY_QUALTRICS_SAT (EQ) If words Highly Satisfied, etc. then convert to numbers 1-5 as per INSTORE Survey get the ANSWERTEXT FDBK_SURVEY_ANSWER_LINK   FDBK_SURVEY_QUALTRICS_SAT (EQ) FDBK_SURVEY_ANSWER_LINK  FDBK_SURVEY_QUALTRICS_SAT (EQ) Ensure the SCORE value follows Business Rule Else use answer to QID20 as per INSTORE Survey LEFT JOIN ( If the score is 6 or 8 this will be -2 (N/A) SELECT SURVEY_NK1, ANSWERTEXT FROM ADW_RDV.FDBK_SURVEY_ANSWER_LINK WHERE ANSWER_NK1 = 'QID209_7' ) q209 on (sqs.SURVEY_NK1 = q209.SURVEY_NK1) LEFT JOIN ( SELECT SURVEY_NK1, ANSWERTEXT FROM ADW_RDV.FDBK_SURVEY_ANSWER_LINK WHERE ANSWER_NK1 = 'QID238' ) q238 on (sqs.SURVEY_NK1 = q238.SURVEY_NK1) PF_URN ADW_RDV FDBK_SURVEY_LINK PF_URN , CAST(min(sl.pf_urn_nk1) as VARCHAR(20)) as PF_URN Same as Column D Same as Column D Same as Column D Same as Column D (will always be NULL for Argos E2E) Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT ORDER_NUMBER ADW_RDV FDBK_SURVEY_LINK ORDER_NUMBER , CAST(min(sl.ORDER_NUMBER) as NUMBER) as ORDER_NUMBER Same as Column D Same as Column D Same as Column D Same as Column D (will always be NULL for Argos E2E) Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT (This should be populated with GOL Order Number. Check  it is populated) AMOUNT_SPENT ADW_RDV FDBK_SURVEY_LINK AMOUNT_SPENT , CAST(min(sl.AMOUNT_SPENT) as VARCHAR(50)) as \"AMOUNT_SPENT\" Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT FAV_STORE_CD ADW_RDV FDBK_SURVEY_LINK FAV_STORE_CD , NULL AS FAV_STORE_CD Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT GENDER ADW_RDV FDBK_SURVEY_LINK GENDER , NULL AS GENDER Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT DEPARTMENT ADW_RDV FDBK_SURVEY_LINK DEPARTMENT , NULL AS DEPARTMENT  --This will be NULL for Qualtrics Same as Column D nan nan nan Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT DEPARTMENT1 ADW_RDV FDBK_SURVEY_LINK DEPARTMENT1 ,cast( (SELECT LISTAGG(DISTINCT d1.ANSWER_LABEL,'|') within group (Order by 1) FROM ADW_PROD.ADW_RDV.FDBK_SURVEY_ANSWER_LINK d1 Same as Column D nan nan nan Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT WHERE d1.SURVEY_NK3 = 'QUALTRICS' AND d1.ANSWER_NK1 = 'QID4' AND d1.survey_nk1 = sl.SURVEY_NK1) as VARCHAR(2000)) AS DEPARTMENT1 DEPARTMENT2 ADW_RDV FDBK_SURVEY_LINK DEPARTMENT2 , NULL AS DEPARTMENT2  --This will be NULL for Qualtrics Same as Column D nan nan nan Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT COUNTER ADW_RDV FDBK_SURVEY_LINK COUNTER ,cast((SELECT LISTAGG(DISTINCT d1.ANSWER_LABEL,'|') within group (Order by 1) FROM ADW_PROD.ADW_RDV.FDBK_SURVEY_ANSWER_LINK d1 Same as Column D nan nan nan Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT WHERE d1.SURVEY_NK3 = 'QUALTRICS' AND d1.ANSWER_NK1 = 'QID8' AND d1.survey_nk1 = sl.SURVEY_NK1) as VARCHAR(2000)) AS COUNTER LIFE_STAGE ADW_RDV FDBK_SURVEY_LINK LIFE_STAGE , CAST(NULL as NUMBER) as LIFE_STAGE Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT START_DATE ADW_RDV FDBK_SURVEY_LINK START_DATE , CAST(min(sl.START_DATE) as TIMESTAMP_NTZ) as START_DATE Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT END_DATE ADW_RDV FDBK_SURVEY_LINK END_DATE , CAST(min(sl.END_DATE) as TIMESTAMP_NTZ) as END_DATE Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT TIME_OF_TRANSACTION ADW_RDV FDBK_SURVEY_LINK TIME_OF_TRANSACTION , CAST(min(sl.TIME_OF_TRANSACTION) as NUMBER) as TIME_OF_TRANSACTION Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT TIME_BAND ADW_RDV FDBK_SURVEY_LINK TIME_BAND , CAST(min(sl.TIME_BAND) as VARCHAR(255)) as TIME_BAND Same as Column D Same as Column D Same as Column D Use FDBK_SURVEY_QUALTRICS_SAT.TIME_BAND if it is not null Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT Else derive a time band using a CASE statement on FDBK_SURVEY_QUALTRICS_SAT.TIME_OF_TRANSACTION as for INSTORE survey STATUS ADW_RDV FDBK_SURVEY_LINK STATUS , CAST(min(sl.STATUS) as NUMBER) as STATUS Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT PROGRESS ADW_RDV FDBK_SURVEY_LINK PROGRESS , CAST(min(sl.PROGRESS) as NUMBER) as PROGRESS Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT DURATION ADW_RDV FDBK_SURVEY_LINK DURATION , CAST(min(sl.DURATION) as NUMBER) as DURATION Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT FINISHED ADW_RDV FDBK_SURVEY_LINK FINISHED , CAST(min(sl.FINISHED) as NUMBER) as FINISHED Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT DELIVERY_METHOD ADW_RDV FDBK_SURVEY_LINK DELIVERY_METHOD , CAST(NULL as NUMBER) as DELIVERY_METHOD Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT PETROL_FILLING_STATION ADW_RDV FDBK_SURVEY_LINK PETROL_FILLING_STATION , CAST(min(sl.PETROL_FILLING_STATION) as VARCHAR(5)) as PETROL_FILLING_STATION Same as Column D Same as Column D Same as Column D Same as Column D (will always be NULL for Argos E2E) Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT DELIVERY_PASS ADW_RDV FDBK_SURVEY_QUALTRICS_SAT DELIVERY_PASS Direct mapping to RDV table field DELIVERY_PASS Same as Column D Same as Column D Same as Column D (will always be NULL for Argos E2E) Same as column H Same as Column D EQ_DEF ADW_RDV FDBK_SURVEY_QUALTRICS_SAT EQ_DEF Direct mapping to RDV table field EQ_DEF Same as Column D Same as Column D Same as Column D Same as column H Same as Column D REPORT_CHANNEL ADW_RDV FDBK_SURVEY_LINK SURVEY_TYPE Same as Column K Same as Column K Same as Column K Same as Column K CASE FDBK_SURVEY_QUALTRICS_SAT.SURVEY_PROJECT_ID CASE FDBK_SURVEY_QUALTRICS_SAT.SURVEY_PROJECT_ID UPPERCASE FDBK_SURVEY_QUALTRICS_SAT WHEN 'SV_9vl3g4QgMWDwyuG' THEN 'SMS Driver Feedback' WHEN 'SV_9vl3g4QgMWDwyuG' THEN 'SMS Driver Feedback' Will be CMC for all CMC Surveys ADW_PROPERTY_PL.DIM_STORE DIM_STORE.STORE_TYPE_FINANCE_DESC WHEN 'SV_6VDlpwWS8tuYjD8' THEN 'SMS Installation' WHEN 'SV_6VDlpwWS8tuYjD8' THEN 'SMS Installation' WHEN 'SV_3UJeDf9c1VsHVYO' THEN WHEN 'SV_8B9js5zeIDa9UV0' THEN 'Feedback' \u00a0 \u00a0 \u00a0 WHEN FDBK_SURVEY_QUALTRICS_SAT.SURVEY_SELECTION_TYPE = 6 THEN 'Home Delivery' WHEN 'SV_2rSvStLzycecZOm' THEN 'PopUp' \u00a0 \u00a0 \u00a0 WHEN FDBK_SURVEY_QUALTRICS_SAT.SURVEY_SELECTION_TYPE = 9 THEN 'In Store Pick Up' WHEN 'SV_3UJeDf9c1VsHVYO' THEN \u00a0 \u00a0 \u00a0 WHEN FDBK_SURVEY_QUALTRICS_SAT.SURVEY_SELECTION_TYPE = 1 THEN 'Walk in Store' \u00a0 \u00a0 \u00a0 WHEN FDBK_SURVEY_QUALTRICS_SAT.SURVEY_SELECTION_TYPE = 6 THEN 'Home Delivery' \u00a0 \u00a0 \u00a0 WHEN FDBK_SURVEY_QUALTRICS_SAT.SURVEY_SELECTION_TYPE = 9 THEN 'In Store Pick Up' \u00a0 \u00a0 \u00a0 WHEN FDBK_SURVEY_QUALTRICS_SAT.SURVEY_SELECTION_TYPE = 1 THEN 'Walk in Store' SMART_SHOP_TYPE ADW_RDV FDBK_SURVEY_LINK SMART_SHOP_TYPE Returns the type of Smartshop store it was at the time of the visit to provide time relevant data. nan nan nan nan Same as column H Same as Column D ADW_PROPERTY_PL.DIM_STORE_SMART_SHOP_TYPE_HIST case when FCS.SURVEY_TYPE='INSTORE' then\u00a0 SSH.SMART_SHOP_TYPE else 'NOT APPLICABLE' end as H_SMART_SHOP_TYPE, SURVEY_BRAND ADW_RDV FDBK_SURVEY_QUALTRICS_SAT SURVEY_PROJECT_ID Takes a value of SAINSBURYS for all Sainsburys surveys and a value of ARGOS for all Argos surveys. Use CASE statement based on SURVEY_PROJECT_ID: Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Hardcode based on SURVEY_PROJECT_ID: CASE SURVEY_PROJECT_ID WHEN 'SV_24DeJwD5LkUQxoy' THEN 'ARGOS' WHEN 'SV_0eXofGHBALFYUwC' THEN SAINSBURYS WHEN 'SV_cFOhrO8drcUbDa5' THEN 'ARGOS' WHEN 'SV_24DeJwD5LkUQxoy' THEN ARGOS WHEN 'SV_5oODvo2t9M3Na5L' THEN 'HABITAT' WHEN 'SV_5bsA1xNDWa2My8t' THEN TU WHEN 'SV_bqPEsEHROd17xum' THEN 'NECTAR' WHEN 'SV_5oODvo2t9M3Na5L' THEN HABITAT WHEN 'SV_87dKDEgmCsxovSl' THEN 'SAINSBURYS' WHEN 'SV_5okht3tJXHtv0ma' THEN SAINSBURYS WHEN 'SV_a3K1kBQbqNMvcbP' THEN 'SAINSBURYS' WHEN 'SV_6MtlOGAxp9i54GO' THEN SAINSBURYS WHEN 'SV_6eTJrAcmCQvLf5b' THEN 'ARGOS-TU' WHEN 'SV_6eTJrAcmCQvLf5b' THEN ARGOS-TU WHEN 'SV_87dKDEgmCsxovSl' THEN SAINSBURYS WHEN 'SV_a3K1kBQbqNMvcbP' THEN SAINSBURYS WHEN 'SV_bqPEsEHROd17xum' THEN NECTAR WHEN 'SV_cFOhrO8drcUbDa5' THEN ARGOS WHEN 'SV_cZnMPk9qqMRo5fL' THEN SAINSBURYS WHEN 'SV_3UJeDf9c1VsHVYO' THEN 'ARGOS' WHEN 'SV_9vl3g4QgMWDwyuG' THEN 'ARGOS' WHEN 'SV_6VDlpwWS8tuYjD8' THEN 'ARGOS' TRANSACTION_TYPE_CD ADW_RDV FDBK_SURVEY_QUALTRICS_SAT TRANSACTION_KEY nan nan nan nan SUBSTRING(FDBK_SURVEY_QUALTRICS_SAT.TRANSACTION_KEY, 20, 2) and then remove the leading zeros to give a number from 1 to 13. This will take a value from the following list: Same as column H Same as Column D 1 - Home Delivery 2 - FastTrack Reservation 3 - FastTrack Collection 4 - Reservation Collection 5 - Ring Order 6 - Walk-in 7 - FastTrack Home Delivery 8 - Clearance Store Walk-in 9 - eBay FastTrack Reservation 10 - eBay FastTrack Collection 11 - eBay Home Delivery 12 - Tu Home Delivery 13 - Tu FastTrack Reservation FULFILMENT_CHANNEL_CD ADW_RDV FDBK_SURVEY_QUALTRICS_SAT FULFILMENT_METHOD nan nan nan nan 1 = 1 Man Store Collection -&gt; 9 = Customer Collection - In-Store (C&amp;R) Same as column H Same as Column D 2 = 2 Man DC / Delivery    -&gt; 3 = Home Delivery - Depot (2 Man Large Items) FDBK_SURVEY_AMEND_METADATA_LINK 3 = Expert (3rd party installations) -&gt;     3 = Home Delivery - Depot (2 Man Large Items) 4 = Supplier (Direct) / 2 Man direct from Supplier -&gt;     2 = Home Delivery - Supplier 5 = 1 Man Hub To Home -&gt;  1 = Home Delivery - Store (FTD) 6 = 1 Man Hub To Home Return -&gt; -1 = -1 Unknown 7 = 1 Man DC -&gt; 4 = Home Delivery - Small Items - 3rd party (1 Man - Yodel) 8 = Prepayment Collection -&gt; 8 = Customer Collection - FTC (Fast Track Collection) 9 = Mailables -&gt;  5 = Home Delivery - Small Items Mailed to Home 10 = Store -&gt;  7 = Customer Collection - In-Store 11 = Tu Home Delivery -&gt; -1 = -1 Unknown 12 = Tu Prepayment Collection -&gt; -1 = -1 Unknown 13 = 1 Man RFC (Carrier Fulfilled) -&gt; 6 = Home Delivery - Small Items Carrier fulfilment 14 = 1 Man Store Collection (Insurance) -&gt; 8 = Customer Collection - FTC (Fast Track Collection) If there has been a CHANGE / Amendment in the FULFILMENT_METHOD get the latest data from FDBK_SURVEY_AMEND_METADATA_LINK FULFILMENT_METHOD_CD ADW_RDV FDBK_SURVEY_QUALTRICS_SAT FULFILMENT_METHOD nan nan nan nan Direct Mapping Direct Mapping Same as Column D If there has been a CHANGE / Amendment in the FULFILMENT_METHOD get the latest data from FDBK_SURVEY_AMEND_METADATA_LINK FDBK_SURVEY_AMEND_METADATA_LINK DEVICE_TYPE_CD ADW_RDV FDBK_SURVEY_ANSWER_LINK ANSWER_NK3 nan Get the answer to QID20 by selecting ANSWER_NK3 from ADW_RDV.FDBK_SURVEY_ANSWER_LINK for this response (SURVEY_NK1) and for ANSWER_NK1 = 'QID20' nan nan For ARGOS Driver and Installation SMS, set to NULL as this question is not included Set to NULL as this question is not included Same as Column D For ARGOS E2E get the answer to QID202 by selecting ANSWER_NK3 from ADW_RDV.FDBK_SURVEY_ANSWER_LINK for this response (SURVEY_NK1) and for ANSWER_NK1 = 'QID202'. Use CASE statement to convert answers to device type: QID20: And on which of the following devices did you select &amp; order the majority of your online shop? 1 (Online via the desktop website) then 1 (Desktop) ANSWER_NK3 = 1 (Desktop / Laptop computer) 2 (Online via the mobile website) then 4 (Mobile) ANSWER_NK3 = 2 (Tablet (e.g. iPad, Kindle Fire, etc.)) 3 (Online via the tablet website) then 2 (Tablet) ANSWER_NK3 = 3 (Mini tablet (e.g. iPad mini, Kindle, etc.)) 4 (Online via the app) then NULL ANSWER_NK3 = 4 (Mobile phone) 5 (In store via a store tablet) then 6 (Other) ANSWER_NK3 = 5 (Games console or smart TV) 6 (In store via the till) then 6 (Other) ANSWER_NK3 = 6 (Other) 7 (Other (please specify)) then 6 (Other) WEBSITE_APP_CD ADW_RDV FDBK_SURVEY_ANSWER_LINK ANSWER_NK3 nan Get the answer to QID19 by selecting ANSWER_NK3 from ADW_RDV.FDBK_SURVEY_ANSWER_LINK for this response (SURVEY_NK1) and for ANSWER_NK1 = 'QID19' nan nan For ARGOS Driver and Installation SMS, set to NULL as this question is not included Set to NULL as this question is not included Same as Column D Get the answer to QID202 by selecting ANSWER_NK3 from ADW_RDV.FDBK_SURVEY_ANSWER_LINK for this response (SURVEY_NK1) and for ANSWER_NK1 = 'QID202'. Use CASE statement to convert answers to website or app: QID19: Thinking about your most recent order, on which of the following, did you select &amp; order the majority of your online shop? 1 (Online via the desktop website) then 1 (Website) ANSWER_NK3 = 1 (Website) 2 (Online via the mobile website) then 1 (Website) ANSWER_NK3 = 2 (App) 3 (Online via the tablet website) then 1 (Website) 4 (Online via the app) then 2 (App) 5 (In store via a store tablet) then NULL 6 (In store via the till) then NULL 7 (Other (please specify)) then NULL HOME_DELIVERY_ORDER_KEY ADW_RDV FDBK_SURVEY_QUALTRICS_SAT HOME_DELIVERY_ORDER_KEY nan nan nan nan Same as Column D Same as column H Same as Column D DELIVERY_DATE ADW_RDV FDBK_SURVEY_QUALTRICS_SAT DELIVERY_DATE nan nan nan nan Same as Column D Same as column H Same as Column D BASKET_MISSION_CD ADW_RDV MISSION_TRANS_HDR_LINK MISSION_SEGMENT_CD SELECT B.MISSION_SEGMENT_CD Same as Column D Default to -2 Default to -2 Same as Column D Same as column H Same as Column D FROM ADW_PROD.ADW_BDV.FDBK_CSAT_SURVEY_REP A, ADW_PROD.ADW_RDV.MISSION_TRANS_HDR_LINK B WHERE A.STORE_CD = B.STORE_NK1\u00a0 and A.TILL_NUM = B.TILL_NK1\u00a0 and A.TRAN_DT = B.TRAN_DT\u00a0 and A.TRAN_TM = B.TRAN_TM\u00a0 and A.TRAN_NUMBER = B.TRAN_NUM\u00a0 IF NULL DEFAULT to -1 for all surveys apart from POPUP and FEEDBACK whereby it will default to -2 These are BASKET_MISSION_CD (NUMBER) to join to existing Orange Squad ADW_SALES_PL.DIM_SEGMENT_BASKET_MISSION. We will process and get this from ADW_RDV.MISSION_TRANS_HDR_LINK if all 5 transaction fields match. If they do not then it will default to -1 Unknown on ADW_BDV.FDBK_CSAT_SURVEY_REP \u2192 FACT_SURVEY_ANSWER for all surveys apart from the FEEDBACK or POPUP Survey whereby it will default to -2 Not Applicable. RESERVATION_KEY ADW_RDV FDBK_SURVEY_QUALTRICS_SAT RESERVATION_KEY nan nan nan nan Same as Column D Same as column H Same as Column D CMC_SURVEY_INSTANCE_ID ADW_RDV FDBK_SURVEY_QUALTRICS_SAT CMC_SURVEY_INSTANCE_ID nan nan nan nan nan nan Direct Mapping RECORD_SOURCE ADW_RDV FDBK_SURVEY_LINK SOURCE_SYSTEM_CD , CAST(min(sl.SOURCE_SYSTEM_CD) as VARCHAR(6)) as RECORD_SOURCE Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT TECHNICAL_METADATA ADW_RDV FDBK_SURVEY_LINK TECHNICAL_METADATA Same as Column D Same as Column D Same as Column D Same as Column D Same as column H Same as Column D FDBK_SURVEY_QUALTRICS_SAT nan nan nan nan nan nan nan"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP/#mapping-steps","title":"Mapping Steps","text":"<ol> <li>Filter both SMG and Qualtrics sources using the selection criteria given to ensure correct data and no duplication into the final table. Ensure only those Survey Project ID's listed above are in this table.</li> <li>Get the NECTAR_COLLECTOR_CARD_NUM for these Survey Project's only if available:  If it is not available then default to NULL. </li> <li>Get the TRANSACTION_KEY i available for these Survey Project's only if available: If it is not available then default to NULL. </li> <li>Get the STORE_CD</li> <li>Get the TILL_NUM</li> <li>Get the TRAN_DT</li> <li>Get the TRAN_TM</li> <li>Get the TRAN_NUMBER</li> <li>Get the SURVEY_TYPE</li> <li>Get the VISIT_DATE</li> <li>Get the VISIT_HOUR</li> <li>Get the TILL_TYPE_ID</li> <li>Get the SURVEY_DATETIME</li> <li>Get the SURVEY_DATE</li> <li>Get the SURVEY_HOUR</li> <li>Get the UNIT_LOCAL_DATETIME</li> <li>Get the INVITE_TYPE</li> <li>Get the OVERALL_CSAT_SCORE</li> <li>Get the PF_URN</li> <li>Get the ORDER_NUMBER</li> <li>Get the AMOUNT_SPENT</li> <li>Get the FAV_STORE_CD</li> <li>Get the GENDER</li> <li>Get the DEPARTMENT</li> <li>Get the DEPARTMENT1</li> <li>Get the DEPARTMENT2</li> <li>Get the COUNTER</li> <li>Get the LIFE_STAGE</li> <li>Get the START_DATE</li> <li>Get the END_DATE</li> <li>Get the TIME_OF_TRANSACTION</li> <li>Get the TIME_BAND</li> <li>Get the STATUS</li> <li>Get the PROGRESS</li> <li>Get the DURATION</li> <li>Get the FINISHED</li> <li>Get the DELIVERY_METHOD</li> <li>Get the PETROL_FILLING_STATION</li> <li>Get the DELIVERY_PASS</li> <li>Get the EQ_DEF</li> <li>Get the REPORT_CHANNEL</li> <li>Get the SMART_SHOP_TYPE</li> <li>Get the SURVEY_BRAND</li> <li>Get the TRANSACTION_TYPE_CD</li> <li>Get the FULFILMENT_CHANNEL_CD</li> <li>Get the FULFILMENT_METHOD_CD</li> <li>Get the DEVICE_TYPE_CD</li> <li>Get the WEBSITE_APP_CD</li> <li>Get the HOME_DELIVERY_ORDER_KEY</li> <li>Get the DELIVERY_DATE</li> <li>Get the BASKET_MISSION_CD</li> <li>Get the RESERVATION_KEY</li> <li>Get the CMC_SURVEY_INSTANCE_ID</li> </ol> <p> item spec, version, supplier, item_cd for active specs from:     1. ITEM_SPEC_NK1, ITEM_SPEC_NK2 from ITEM_SPECIFICATION_EVOLVE_SAT     1. ITEM_SUPPLIER_CD from ITEM_SUPPLIER_SITE_LINK         1. ???+ warning \"Supplier Cleaning\"             Remove Dummy Supplier <pre><code>Remove ITEM_SUPPLIER_CD = I0055 when ITEM_SPEC_TITLE contains DO NOT USE\n</code></pre> Clean Evolve Supplier Codes <pre><code>Trim any supplier codes that end in -1  \nRemove ITEM_SUPPLIER_CD:  \nXA11115 (Dummy Code)  \n200435 (GM Supplier)  \n210206 (GM Supplier)\n</code></pre>         1. Get ITEM_CD from TS_BDV_ITEM_PACKAGING_COMPONENT_AVG_WEIGHT_HIST_BR_01 1. Combine OP &amp; AP together to retrieve all necessary component level data for the object build. 1. Apply calculations and transformations on packaging data weights. See calculations section for more detail.      1. ???+ example \"Calculations\"         Secondary         An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.         <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary         Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.         <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation         This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.         <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation         A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:         <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre> 1. Get TRAN_DT, NET_SALES_VOLUME, ITEM_CD, SALES_INITIATED_LOCATION_CD, FULFILMENT_CHANNEL_CD from AGG_FINANCE_PNL_METRIC to be able to combine sales data with packaging for tonnage statistics.     <pre><code>SELECT TRAN_DT, NET_SALES_VOLUME, ITEM_CD, SALES_INITIATED_LOCATION_CD, FULFILMENT_CHANNEL_CD  \nFROM adw_prod.adw_finance_pl.agg_finance_pnl_metric  \nINNER JOIN adw_prod.adw_reference_pl.dim_date ON tran_dt = date_dt  \nWHERE clndr_dt_id BETWEEN to_char(dateadd(DAYS, -756, current_date()), 'YYYYMMDD')AND to_char(current_date(), 'YYYYMMDD')\n</code></pre> 1. Add in country data to BR table by looking up SALES_INITIATED_LOCATION_CD against LOCATION_CD in DIM_LOCATION. 1. Apply stock and sales logic to allow weighting sales volume for multiple suppliers of an item.     1. ???+ info \"Stock &amp; Sales Logic\"         <pre><code>Combine FACT_STORE_DELIVERY_ITEM &amp; FACT_DEPOT_STOCK to retrieve ITEM_CD, SUPPLIER_CD, STOCK_DT, SUPPLIER_QUANTITY\n</code></pre> 1. Combine sales data with packaging data. 1. Add Valpak data into BR table. 1. Apply tonnage calculations with sales and packaging data. 1. Apply recycling advice cleaning to Evolve &amp; Valpak. Lookup adw_product_tran.evolve_valpak_recycle_advice_ref and return the cleaned column in the table output. 1. Load transform schema to table. 1. End. <pre><code>\n</code></pre></p>"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP/#diagram","title":"Diagram","text":"<pre><code>flowchart LR\n    A[Happy Christmas] --&gt;|Get gifts| B(Go shopping)\n    B --&gt; C{Let me think}\n    C --&gt;|One| D[Laptop]\n    C --&gt;|Two| E[iPhone]\n    C --&gt;|Three| F[fa:fa-car Car]\n</code></pre>"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP/#tests-checks","title":"Tests &amp; Checks","text":"<p>Original Tests:</p> <ul> <li> Secondary &amp; Tertiary calculations applied</li> <li> Multipack calculations applied</li> <li> Supplier weighting applied</li> <li> Sales volume is the same in br table as source</li> <li> Tonnage and recycled tonnage calculations are verified</li> </ul> <p>New Tests:</p> <ul> <li> Fulfilment channel &amp; Tran_DT incorporated into table</li> <li> Enhanced supplier cleaning added</li> <li> New filter conditions for TRAN_DT from AGG_FINANCE_PNL_METRIC have been applied</li> <li> Specification weight at end of the month is applied to whole period</li> </ul>"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP_ddl_edit/","title":"FDBK_CSAT_SURVEY_REP","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP_ddl_edit/#description","title":"Description","text":"<p>This table contain survey response details for each CSAT survey that has been completed by a customer. This table contains all of the header data for an individual response, including the date of the visit, the date of the survey and the store visited (where relevant). If available a link to the survey responder's Nectar account is also available. There will be one row in this table for each survey response. This table is used to populate FLF_CSAT_SURVEY with survey responses.</p>"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP_ddl_edit/#selection-criteria","title":"Selection Criteria","text":"<p>This BDV object contains two sources (SMG Survey and Qualtrics Survey), as a result we must identify which data we want to take from each source and ensure no duplication in the data. </p> <p>Valid Records from RDV <pre><code>RECORD_DELETED_FLAG_FLAG = 'N'\n</code></pre> Survey Project Criteria <pre><code>SURVEY_PROJECT_ID IN (\n'SMG_INSTORE',           -- SMG Instore Survey (Historical)\n'SMG_ONLINE',            --SMG GOL Survey (Historical)\n'SMG_POPUP',             --SMG Popup Survey (Historical)\n'SMG_FEEDBACK',          --SMG Feedback Survey (Historical)\n'SV_cZnMPk9qqMRo5fL',    --Lettuce Know - Instore\n'SV_6MtlOGAxp9i54GO',    --Sainsbury's - GOL Delivery\n'SV_5okht3tJXHtv0ma',    --Sainsburys - Pop Up Survey\n'SV_0eXofGHBALFYUwC',    --Sainsburys - Feedback button\n'SV_5bsA1xNDWa2My8t',    --Tu CSAT\n'SV_5oODvo2t9M3Na5L',    --Contact Centre: Habitat post call SMS survey\n'SV_6eTJrAcmCQvLf5b',    --Contact Centre: Tu Clothing post call SMS survey - Argos\n'SV_24DeJwD5LkUQxoy',    -- Contact Centre: Argos Deflection post call SMS survey\n'SV_87dKDEgmCsxovSl',    --Contact Centre: Sainsbury's Careline post call SMS survey\n'SV_a3K1kBQbqNMvcbP',    --Contact Centre: Sainsbury's GOL post call SMS survey\n'SV_bqPEsEHROd17xum',    --Contact Centre: Nectar post call SMS survey\n'SV_cFOhrO8drcUbDa5',    --Contact Centre: Argos post call SMS survey\n'SV_6VDlpwWS8tuYjD8',    --Argos Installation SMS Survey\n'SV_2rSvStLzycecZOm',    --Argos Popup Survey \n'SV_8B9js5zeIDa9UV0',    --Argos Feedback Survey\n'SV_9vl3g4QgMWDwyuG',    --Argos Driver Feedback SMS Survey\n'SV_3UJeDf9c1VsHVYO'     --Argos E2E Survey\n)\n</code></pre></p>"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP_ddl_edit/#target-to-source","title":"Target to Source","text":"<p>Below DDL describes target system and column. Column comments contain source tables.</p> <pre><code>CREATE OR REPLACE TABLE ADW_BDV.CMC_CUSTOMER_CONTACT_BR\n(\nCMC_CUSTOMER_CONTACT_ID               varchar(128) NOT NULL COMMENT 'Source: ADW_RDV.COLUMN_NAME Description: Unique Identifier for a CMC Customer Contract.',\nSURVEY_PROJECT_ID                     varchar(128)          COMMENT 'Source: ADW_RDV.COLUMN_NAME Description: Unique Identifier for the Survey Project in Qualtrics. A Survey Project can be used many times. This is the Qualtrics Survey Project ID ie: SV_24DeJwD5LkUQxoy, SV_cFOhrO8drcUbDa5, SV_5oODvo2t9M3Na5L, SV_bqPEsEHROd17xum, SV_87dKDEgmCsxovSl, SV_a3K1kBQbqNMvcbP, SV_6eTJrAcmCQvLf5b',\nSURVEY_PROJECT_NAME                   varchar(500)          COMMENT 'Source: ADW_RDV.COLUMN_NAME Description:Survey Project Name',\nCMC_SURVEY_CHANNEL                    varchar(128)          COMMENT 'The Channel for the CMC Metadata ie: VOICE, EMAIL, CHAT.',\nCMC_SURVEY_BRAND                      varchar(128)          COMMENT 'The Brand linked to the CMC Metadata ie: ARGOS, SAINSBURYS or HABITAT.',\nCMC_SURVEY_DEPARTMENT                 varchar(128)          COMMENT 'Department that handled the call relating to the Survey instance. Departments are not unique to brands.',\nCMC_SURVEY_INSTANCE_ID                varchar(128)          COMMENT 'Unique Identifier for the Instance of the Survey. This is the CMC (Contact Management Centre) instance of a Survey that was sent to the Customer after the call to the contact centre.',\nCMC_SURVEY_INSTANCE_URL               varchar(1000)         COMMENT 'The URL to access the Survey sent to the Customer.',\nCMC_NEW_CONTACT_BRAND                 varchar(128)          COMMENT 'The Brand linked to the CMC Metadata',\nCMC_NEW_CONTACT_CHANNEL               varchar(128)          COMMENT 'The Channel for the CMC Metadata',\nCMC_NEW_CONTACT_CREATED_TS            timestamp_ntz(9)      COMMENT 'The datetime the record was created',\nCMC_NEW_CONTACT_CREATED_DT            date                  COMMENT 'The date the record was created',\nCMC_NEW_CONTACT_MODIFIED_TS           timestamp_ntz(9)      COMMENT 'The datetime the record was modified',\nCMC_NEW_CONTACT_MODIFIED_DT           date COMMENT 'The date the record was modified',\nCALL_END_BRAND                        varchar(128) COMMENT 'The Brand linked to the CMC Metadata ie: ARGOS, SAINSBURYS or HABITAT',\nCALL_END_DEPARTMENT                   varchar(128) COMMENT 'Department that handled the call last. Departments are not unique to brands.',\nCALL_END_TELEPHONE_NUM                varchar(128) COMMENT 'Customer''s Phone Number',\nCALL_END_SURVEY_FLAG                  varchar(20) COMMENT 'When the call ends does the Customer want to complete a Survey? TRUE/FALSE',\nCALL_END_STATUS                       varchar(128) COMMENT 'What was the status of the call when it ended?\u2022ABANDONED = Customer Hung Up\u2022CLOSED = Contact Centre is Closed\u2022DEFLECTION_SUCCESSFUL = Customer was Deflected and never spoke to an Agent\u2022HANDLED = Agent Handled the Call\u2022TRANSFERRED_OUT = Call transferred to an external number',\nCALL_END_TS                           timestamp_ntz(9) COMMENT 'Date Time for when the Call ended',\nCALL_END_DT                           date COMMENT 'Date for when the Call ended',\nCONTEXT_ID                            varchar(128) COMMENT 'Unique Identifier in Oceana',\nCONTEXT_CREATION_TS                   timestamp_ntz(9) COMMENT 'The datetime the record was created',\nCONTEXT_CREATION_DT                   date COMMENT 'The date the record was created',\nCONTEXT_ESTIMATED_WAITTIME            number(38,5) COMMENT 'The estimated wait time for the communication with the Customer.',\nCONTEXT_ID_STATUS                     varchar(20) COMMENT 'The Status for the context of the communication.',\nCONTEXT_AUTH_STATUS                   varchar(20) COMMENT 'The Authorized Status for the context of the communication.',\nCONTEXT_ORDER_NUMBER                  varchar(128) COMMENT 'The Order Number relating to the context for the communication with the Customer.',\nCONTEXT_TREATMENT_VDN                 varchar(128) COMMENT 'The treatment of the VDN (vector directory number). That is the extension on an automatic call distributor that directs the incoming call to a vector or routing the call to a destination or location at the call centre.',\nCONTEXT_SURVEY_ACCEPTED               varchar(20) COMMENT 'Did the Customer accept to complete a survey? true or false',\nCONTEXT_UCID                          varchar(128) COMMENT 'Unique Call Identifier in Aura. Unique Call Identifier from Aura (which transferred to Oceana)',\nCONTEXT_TOPIC                         varchar(128) COMMENT 'The topic for the creation of the context record.',\nCONTEXT_SCHEMA_STRATEGY               varchar(128) COMMENT 'The strategy for the context record.',\nCONTEXT_FIRST_ATTRIBUTES_DEPARTMENT   varchar(128) COMMENT 'Context First: Department that handled the call. Departments are not unique to brands.',\nCONTEXT_FIRST_ATTRIBUTES_CHANNEL      varchar(128) COMMENT 'Context First: The Channel for the CMC Metadata ie: VOICE, EMAIL, CHAT',\nCONTEXT_FIRST_ATTRIBUTES_SITE_STATUS  varchar(128) COMMENT 'Context First: The schema site status ie: Online',\nCONTEXT_FIRST_ATTRIBUTES_INTENT       varchar(128) COMMENT 'Context First: The intent of the context for the record ie: 2ManPostSecondary, 1ManPrimary, NULL',\nCONTEXT_FIRST_ATTRIBUTES_INDIVIDUAL   varchar(128) COMMENT 'Context First: The attributes of the individual of the record.',\nCONTEXT_FIRST_RANK                    number(38.0) COMMENT 'Context First: The rank for the record.',\nCONTEXT_FIRST_PRIORITY                number(38.0) COMMENT 'Context First: The priority for the record.',\nCONTEXT_SECOND_ATTRIBUTES_DEPARTMENT  varchar(128) COMMENT 'Context Second: Department that handled the call. Departments are not unique to brands.',\nCONTEXT_SECOND_ATTRIBUTES_CHANNEL     varchar(128) COMMENT 'Context Second: The Channel for the CMC Metadata ie: VOICE, EMAIL, CHAT',\nCONTEXT_SECOND_ATTRIBUTES_SITE_STATUS varchar(128) COMMENT 'Context Second: The schema site status ie: Online',\nCONTEXT_SECOND_ATTRIBUTES_INTENT      varchar(128) COMMENT 'Context Second: The intent of the context for the record ie: 2ManPostSecondary, 1ManPrimary, NULL',\nCONTEXT_SECOND_RANK                   number(38,0) COMMENT 'Context Second: The rank for the record.',\nCONTEXT_SECOND_PRIORITY               number(38,0) COMMENT 'Context Second: The priority for the record.',\nCONTEXT_SCHEMA_DATA_CENTER            varchar(128) COMMENT 'The Data Centre sources for the record ie: Primary',\nCONTEXT_SCHEMA_CUSTOMER_ID            varchar(128) COMMENT 'The Customer ID if available.',\nCONTEXT_SCHEMA_ORDERING               varchar(128) COMMENT 'The ordering of the record if available.',\nCONTEXT_GROUP_ID                      varchar(128) COMMENT 'The groupid of the record if available.',\nCONTEXT_PERSIST_TO_EDM                varchar(20) COMMENT 'The context of the record Persist to Electronic Direct Marketing - TRUE, FALSE',\nLOAD_TS                               timestamp_ntz(9) NOT NULL COMMENT 'Timestamp recording when this row was inserted.',\nTECHNICAL_METADATA                    variant NOT NULL COMMENT 'A JSON message of support fields. See Aspire modelling standards. Can be any of these:  BATCH_ID,RECORD_ARRIVAL_TS, HASH_DIFF, JOB NAME, LOAD_TS, REASON_CD, RECORD_DELETED_FLAG, RECORD_ID, SOURCE_PATH, SOURCE_SYSTEM_CD, ETL_FRAMEWORK',\nCONSTRAINT \"BDV-CMC_CUSTOMER_CONTACT_BR_PK\" PRIMARY KEY ( CMC_CUSTOMER_CONTACT_ID, LOAD_TS )\n)\nCOMMENT = 'This table contains the CMC (Contact Management Centre) Customer Contact metadata from the telephone call the customer made to the contact centre. The data in this table contains the CMC customer contact ID, the contact channel, customer telephone number (hashed) and the CMC_SURVEY_INSTANCE_ID (if available) which can be used to join to a CSAT Survey (if the customer chose to complete a CSAT Survey after the telephone call).  A CMC_CUSTOMER_CONTACT_ID record can exist without a Customer choosing to complete a survey after the call to the contact centre.';\n/* IRM Tagging */\nALTER TABLE ADW_PROD.ADW_RDV.CMC_CUSTOMER_CONTACT_BR SET TAG account_objects.tags.IRM = '{\"IRM\":[{\"Primary\":\"L3NN\",\"Linked\":[ \"L4DU\",\"M7XX\"]}]}';\n</code></pre>"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP_ddl_edit/#mapping-steps","title":"Mapping Steps","text":"<ol> <li>Filter both SMG and Qualtrics sources using the selection criteria given to ensure correct data and no duplication into the final table. Ensure only those Survey Project ID's listed above are in this table.</li> <li>Get the NECTAR_COLLECTOR_CARD_NUM for these Survey Project's only if available:  If it is not available then default to NULL. </li> <li>Get the TRANSACTION_KEY i available for these Survey Project's only if available: If it is not available then default to NULL. </li> <li>Get the STORE_CD</li> <li>Get the TILL_NUM</li> <li>Get the TRAN_DT</li> <li>Get the TRAN_TM</li> <li>Get the TRAN_NUMBER</li> <li>Get the SURVEY_TYPE</li> <li>Get the VISIT_DATE</li> <li>Get the VISIT_HOUR</li> <li>Get the TILL_TYPE_ID</li> <li>Get the SURVEY_DATETIME</li> <li>Get the SURVEY_DATE</li> <li>Get the SURVEY_HOUR</li> <li>Get the UNIT_LOCAL_DATETIME</li> <li>Get the INVITE_TYPE</li> <li>Get the OVERALL_CSAT_SCORE</li> <li>Get the PF_URN</li> <li>Get the ORDER_NUMBER</li> <li>Get the AMOUNT_SPENT</li> <li>Get the FAV_STORE_CD</li> <li>Get the GENDER</li> <li>Get the DEPARTMENT</li> <li>Get the DEPARTMENT1</li> <li>Get the DEPARTMENT2</li> <li>Get the COUNTER</li> <li>Get the LIFE_STAGE</li> <li>Get the START_DATE</li> <li>Get the END_DATE</li> <li>Get the TIME_OF_TRANSACTION</li> <li>Get the TIME_BAND</li> <li>Get the STATUS</li> <li>Get the PROGRESS</li> <li>Get the DURATION</li> <li>Get the FINISHED</li> <li>Get the DELIVERY_METHOD</li> <li>Get the PETROL_FILLING_STATION</li> <li>Get the DELIVERY_PASS</li> <li>Get the EQ_DEF</li> <li>Get the REPORT_CHANNEL</li> <li>Get the SMART_SHOP_TYPE</li> <li>Get the SURVEY_BRAND</li> <li>Get the TRANSACTION_TYPE_CD</li> <li>Get the FULFILMENT_CHANNEL_CD</li> <li>Get the FULFILMENT_METHOD_CD</li> <li>Get the DEVICE_TYPE_CD</li> <li>Get the WEBSITE_APP_CD</li> <li>Get the HOME_DELIVERY_ORDER_KEY</li> <li>Get the DELIVERY_DATE</li> <li>Get the BASKET_MISSION_CD</li> <li>Get the RESERVATION_KEY</li> <li>Get the CMC_SURVEY_INSTANCE_ID</li> </ol> <p> item spec, version, supplier, item_cd for active specs from:     1. ITEM_SPEC_NK1, ITEM_SPEC_NK2 from ITEM_SPECIFICATION_EVOLVE_SAT     1. ITEM_SUPPLIER_CD from ITEM_SUPPLIER_SITE_LINK         1. ???+ warning \"Supplier Cleaning\"             Remove Dummy Supplier <pre><code>Remove ITEM_SUPPLIER_CD = I0055 when ITEM_SPEC_TITLE contains DO NOT USE\n</code></pre> Clean Evolve Supplier Codes <pre><code>Trim any supplier codes that end in -1  \nRemove ITEM_SUPPLIER_CD:  \nXA11115 (Dummy Code)  \n200435 (GM Supplier)  \n210206 (GM Supplier)\n</code></pre>         1. Get ITEM_CD from TS_BDV_ITEM_PACKAGING_COMPONENT_AVG_WEIGHT_HIST_BR_01 1. Combine OP &amp; AP together to retrieve all necessary component level data for the object build. 1. Apply calculations and transformations on packaging data weights. See calculations section for more detail.      1. ???+ example \"Calculations\"         Secondary         An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.         <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary         Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.         <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation         This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.         <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation         A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:         <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre> 1. Get TRAN_DT, NET_SALES_VOLUME, ITEM_CD, SALES_INITIATED_LOCATION_CD, FULFILMENT_CHANNEL_CD from AGG_FINANCE_PNL_METRIC to be able to combine sales data with packaging for tonnage statistics.     <pre><code>SELECT TRAN_DT, NET_SALES_VOLUME, ITEM_CD, SALES_INITIATED_LOCATION_CD, FULFILMENT_CHANNEL_CD  \nFROM adw_prod.adw_finance_pl.agg_finance_pnl_metric  \nINNER JOIN adw_prod.adw_reference_pl.dim_date ON tran_dt = date_dt  \nWHERE clndr_dt_id BETWEEN to_char(dateadd(DAYS, -756, current_date()), 'YYYYMMDD')AND to_char(current_date(), 'YYYYMMDD')\n</code></pre> 1. Add in country data to BR table by looking up SALES_INITIATED_LOCATION_CD against LOCATION_CD in DIM_LOCATION. 1. Apply stock and sales logic to allow weighting sales volume for multiple suppliers of an item.     1. ???+ info \"Stock &amp; Sales Logic\"         <pre><code>Combine FACT_STORE_DELIVERY_ITEM &amp; FACT_DEPOT_STOCK to retrieve ITEM_CD, SUPPLIER_CD, STOCK_DT, SUPPLIER_QUANTITY\n</code></pre> 1. Combine sales data with packaging data. 1. Add Valpak data into BR table. 1. Apply tonnage calculations with sales and packaging data. 1. Apply recycling advice cleaning to Evolve &amp; Valpak. Lookup adw_product_tran.evolve_valpak_recycle_advice_ref and return the cleaned column in the table output. 1. Load transform schema to table. 1. End. <pre><code>\n</code></pre></p>"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP_ddl_edit/#diagram","title":"Diagram","text":"<pre><code>flowchart LR\n    A[Happy Christmas] --&gt;|Get gifts| B(Go shopping)\n    B --&gt; C{Let me think}\n    C --&gt;|One| D[Laptop]\n    C --&gt;|Two| E[iPhone]\n    C --&gt;|Three| F[fa:fa-car Car]\n</code></pre>"},{"location":"adw_bdv/FDBK_CSAT_SURVEY_REP_ddl_edit/#tests-checks","title":"Tests &amp; Checks","text":"<p>Original Tests:</p> <ul> <li> Secondary &amp; Tertiary calculations applied</li> <li> Multipack calculations applied</li> <li> Supplier weighting applied</li> <li> Sales volume is the same in br table as source</li> <li> Tonnage and recycled tonnage calculations are verified</li> </ul> <p>New Tests:</p> <ul> <li> Fulfilment channel &amp; Tran_DT incorporated into table</li> <li> Enhanced supplier cleaning added</li> <li> New filter conditions for TRAN_DT from AGG_FINANCE_PNL_METRIC have been applied</li> <li> Specification weight at end of the month is applied to whole period</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2010/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2010/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2010/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2010/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2010/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2010/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2010/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2011/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2011/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2011/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2011/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2011/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2011/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2011/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2012/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2012/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2012/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2012/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2012/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2012/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2012/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2013/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2013/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2013/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2013/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2013/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2013/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2013/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2014/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2014/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2014/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2014/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2014/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2014/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2014/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2015/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2015/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2015/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2015/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2015/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2015/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2015/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2016/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2016/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2016/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2016/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2016/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2016/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2016/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2017/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2017/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2017/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2017/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2017/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2017/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2017/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2018/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2018/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2018/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2018/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2018/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2018/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2018/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2019/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2019/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2019/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2019/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2019/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2019/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2019/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%202/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%202/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%202/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%202/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%202/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%202/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%202/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2020/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2020/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2020/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2020/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2020/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2020/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2020/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2021/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2021/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2021/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2021/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2021/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2021/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2021/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2022/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2022/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2022/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2022/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2022/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2022/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2022/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2023/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2023/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2023/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2023/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2023/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2023/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2023/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2024/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2024/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2024/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2024/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2024/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2024/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2024/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2025/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2025/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2025/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2025/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2025/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2025/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2025/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2026/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2026/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2026/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2026/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2026/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2026/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2026/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2027/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2027/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2027/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2027/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2027/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2027/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2027/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2028/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2028/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2028/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2028/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2028/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2028/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2028/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2029/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2029/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2029/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2029/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2029/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2029/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2029/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%203/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%203/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%203/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%203/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%203/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%203/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%203/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2030/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2030/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2030/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2030/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2030/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2030/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2030/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2031/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2031/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2031/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2031/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2031/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2031/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2031/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2032/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2032/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2032/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2032/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2032/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2032/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2032/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2033/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2033/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2033/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2033/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2033/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2033/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2033/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2034/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2034/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2034/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2034/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2034/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2034/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2034/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2035/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2035/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2035/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2035/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2035/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2035/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2035/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2036/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2036/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2036/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2036/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2036/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2036/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2036/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2037/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2037/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2037/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2037/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2037/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2037/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2037/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2038/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2038/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2038/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2038/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2038/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2038/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2038/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2039/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2039/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2039/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2039/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2039/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2039/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2039/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%204/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%204/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%204/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%204/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%204/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%204/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%204/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2040/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2040/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2040/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2040/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2040/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2040/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2040/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2041/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2041/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2041/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2041/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2041/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2041/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2041/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2042/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2042/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2042/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2042/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2042/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2042/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2042/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2043/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2043/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2043/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2043/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2043/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2043/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2043/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2044/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2044/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2044/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2044/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2044/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2044/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2044/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2045/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2045/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2045/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2045/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2045/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2045/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2045/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2046/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2046/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2046/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2046/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2046/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2046/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2046/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2047/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2047/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2047/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2047/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2047/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2047/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2047/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2048/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2048/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2048/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2048/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2048/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2048/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2048/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2049/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2049/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2049/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2049/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2049/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2049/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2049/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%205/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%205/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%205/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%205/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%205/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%205/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%205/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%2050/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%2050/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%2050/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2050/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%2050/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%2050/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%2050/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%206/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%206/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%206/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%206/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%206/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%206/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%206/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%207/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%207/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%207/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%207/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%207/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%207/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%207/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%208/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%208/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%208/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%208/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%208/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%208/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%208/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy%209/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy%209/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy%209/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%209/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy%209/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy%209/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy%209/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example%20copy/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example%20copy/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example%20copy/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example%20copy/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example%20copy/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   E([VALPAK])\n   end\n   subgraph TS\n   A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n   B([AP])--&gt;|union| D\n   I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n   J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n   C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n   F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n   E--&gt;|union|D\n   K--&gt;|join packaging with specs|F\n   D--&gt;J\n   end\n   subgraph ADW_BDV\n   direction LR\n   H--&gt;G([PACKAGING_COMPONENT_BR])\n   end\n   end\n</code></pre>"},{"location":"adw_bdv/bdv_example%20copy/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example/#description","title":"Description","text":"Packaging Component BR <p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example/#selection-criteria","title":"Selection Criteria","text":"Filtering correct source data from tables <p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example/#target-to-source","title":"Target to Source","text":"Target to Source Aliases <p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target to Source Table Order Target Column Source Table Source Column Mapping Rules 1 PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see rules AP_Build OP_Build  *Vpak_Build 2 VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS *Spec_Version_Build 3 VALID_TO_DT EVOLVE_SAT &amp; VALPAK N/A *Spec_Version_Build 4 ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD AP_Build OP_Build  *Vpak_Build 5 SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 *Spec_Version_Build 6 SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS *Spec_Version_Build 7 PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD AP_Build OP_Build  *Vpak_Build 8 COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD AP_Build OP_Build  *Vpak_Build 9 COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT  ITEM_PACKAGING_COMPONENT_DESC  ITEM_PACKAGING_COMPONENT_DESC AP_Build OP_Build  *Vpak_Build 10 COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC AP_Build OP_Build  *Vpak_Build 11 COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD AP_Build OP_Build  *Vpak_Build 12 COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL AP_Build OP_Build  *Vpak_Build 13 COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, AP_Build OP_Build 14 RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD AP_Build OP_Build  *Vpak_Build 15 COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR AP_Build Vpak_Build 16 COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS AP_Build OP_Build  *Vpak_Build 17 CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan *Calculations 18 COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT AP_Build OP_Build  *Vpak_Build 19 CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan *Calculations 20 COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT AP_Build OP_Build  *Vpak_Build 21 MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE AP_Build Vpak_Build 22 UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT *AP_Build 23 COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM *AP_Build 24 COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM *AP_Build 25 COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM *AP_Build 26 FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG AP_Build OP_Build 27 SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC *AP_Build 28 LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING *AP_Build 29 INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE *AP_Build 30 HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE *AP_Build 31 TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT *AP_Build 32 TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR *AP_Build 33 COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER AP_Build OP_Build 34 COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD AP_Build OP_Build 35 COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION AP_Build OP_Build 36 TECHNICAL_METADATA nan nan nan"},{"location":"adw_bdv/bdv_example/#mapping-steps","title":"Mapping Steps","text":"*Advanced Packaging Build <ul> <li>Get data from AP from the below steps:<ul> <li>Create Primary Key &amp; Spec/Version Key:     In packaging we need to combine a number of natural keys for a unique row, concatenate the below fields, this will be to target <code>PACKAGING_COMPONENT_CD</code>.     <pre><code>ITEM_NK1,  \nITEM_SPEC_NK1,\nITEM_SPEC_NK2,\nITEM_PACKAGING_CD,\nITEM_PACKAGING_COMPONENT_CD\n</code></pre>  In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.     <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre></li> <li>Clean these columns: <pre><code>WHEN PACKAGING_COMPONENT_LEVEL = 'AP_PRIMARY' THEN `PRIMARY`\nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_SECONDARY' THEN `SECONDARY` \nWHEN PACKAGING_COMPONENT_LEVEL = 'AP_TERTIARY' THEN `TERTIARY`\n</code></pre></li> <li>All other Fields from AP to be brought in <pre><code>PACKAGING_COMPONENT_COMPONENT\nPACKAGING_COMPONENT_EXTENDED_MATERIAL\nPACKAGING_COMPONENT_BASE_MATERIAL_DESC\nPACKAGING_COMPONENT_FOOD_CONTACT_IND\nPACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS\nPACKAGING_COMPONENT_LENGTH_MM\nPACKAGING_COMPONENT_WIDTH_MM\nPACKAGING_COMPONENT_HEIGHT_MM\nPACKAGING_COMPONENT_COMPONENT_THICKNESS_MM\nPACKAGING_DETAIL_SPECIFICATION\nPACKAGING_DETAIL_MATERIAL_SPEC_TYPE\nPACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC\nPACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING\nPACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE\nPACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE\nPACKAGING_DETAIL_TAMPER_EVIDENT\nPACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR\nPACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK\nPACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT\nPACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT\nPACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS\nPACKAGING_DETAIL_COLOUR\nPACKAGING_DETAIL_ADHESIVE_TYPE\nPACKAGING_DETAIL_STRUCTURE\nPACKAGING_DETAIL_PRINT_METHOD\nPACKAGING_DETAIL_INK_TYPE\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATION\nPACKAGING_DETAIL_SUPPLIER_CERTIFICATE_NUMBERS\nPACKAGING_DETAIL_PACKAGING_SUPPLIER\nPACKAGING_DETAIL_COUNTRY_OF_ORIGIN\nPACKAGING_QUESTIONS_CONTAINS_BISPHENOL_A\nPACKAGING_QUESTIONS_CONTAINS_METAL_HYDROXIDES\nPACKAGING_QUESTIONS_CONTAINS_PHTHALATES\nPACKAGING_QUESTIONS_CONTAINS_PHOTO_INITIATORS\nPACKAGING_QUESTIONS_CONTAINS_PFAS_PFOA_PFOS\nPACKAGING_PARENT\nEFFECTIVE_FROM_TS\n\"ADVANCED_PACKAGING\" AS SOURCE\n</code></pre></li> </ul> </li> </ul> *Original Packaging Build <ol> <li>Get data from OP with the below fields:         1. ???+ Info \"Primary Keys, Join Conditions &amp; Column Alignment\"            - Create same keys as the steps in AP            - JOIN TO ITEM_SPECIFICATION_MATERIAL_REF ON OP.MATERIAL_CD = MAT_REF.MATERIAL_CD            - The order and names of the columns will need to align to the structure in APto allow a union, when a column isn\u2019t present in OP please add the AP column name filled with \u201cNOT IN ORIGINAL PACKAGING\u201d          1. All other Fields from OP to be brought in <pre><code>PACKAGING_COMPONENT_SUPPLIER\nITEM_PACKAGING_COMPONENT_DESC\nITEM_PACKAGING_COMPONENT_SPECIFICATION\nRECYCLED_PERCENT\nRECYCLED_WEIGHT\nCOMPONENT_WEIGHT\nCOMPONENT_COUNTRY_CD\nFOOD_CONTACT_FLAG\nCERTIFICATION\nPRINT_METHOD\nPACKAGING_LEVEL_DESC\nMATERIAL_DESC\nMATERIAL_SPEC_TYPE\nEFFECTIVE_FROM_TS\n\"ORIGINAL_PACKAGING\" AS SOURCE\n</code></pre></li> </ol> *Valpak Build <ol> <li>Get data from VALPAK with the below fields:         1. ???+ Info \"Column Alignment\"             - The order and names of the columns will need to align to the structure in AP to allow a union, when a column isn\u2019t present in VALPAK please add the AP column name filled with \u201cNOT IN VALPAK\u201d            - Valpak has surrogate keys as there aren't any natural keys in the data, you can use COMPONENT_VALPAK_SK_CD for PACKAGING_COMPONENT_CD and SPECIFICTION_VERSION_SK_CD for SPECIFICTION_VERSION_CD         <pre><code>ITEM_CD\nRECYCLING_ADVICE_CD\nCOMPONENT_WEIGHT_VALID_FROM_DT\nPACKAGING_LEVEL_DESC\nMATERIAL_UNIFORM_CD\nMATERIAL_UNIFORM_EXTENDED_MATERIAL\nITEM_PACKAGING_COMPONENT_DESC\nMATERIAL_COLOUR\nAVERAGE_PACKAGING_RECYCLED_WEIGHT\nAVERAGE_PACKAGING_COMPONENT_WEIGHT\nRECYCLED_WEIGHT_PCT\nMULTIPACK_VALUE\n\"VALPAK\" AS SOURCE\n</code></pre></li> </ol> Union, Filtering &amp; Adding Recycling Advice <ol> <li>Combine all three datasets so we have our base packaging content, for the purposes of the steps this will be called PACKAGING.</li> <li>Filter PACKAGING sources based on the selection criteria given to ensure correct items are coming from each source.</li> <li>Apply recycling advice cleaning to Evolve &amp; Valpak. Left Join to ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF on PACKAGING.SOURCE = SOURCE AND PACKAGING.RECYCLING_ADVICE_DESC = OP_AP_VALPAK_RECYCLING_ADVICE and return RECYCLING_ADVICE AS RECYCLING_ADVICE_DESC. </li> </ol> *Adding in Specification &amp; Version Details <ol> <li>Get data from EVOLVE_SAT with the below fields, this is so we can see what components were listed against a spec in a particular time period.         1. Create Spec/Version Key            - In packaging the Specification &amp; Version is a unique agreement between Sainsburys and the Supplier. Concatenate the below fields these will be used to join to the Evolve Sat.            -             <pre><code>ITEM_SPEC_NK1, ITEM_SPEC_NK2\n</code></pre>         1. All other Fields from EVOLVE_SAT to be brought in            - <pre><code>ITEM_SPEC_STATUS\nISMULTI_PACK_FLAG\nEFFECTIVE_FROM_TS AS VALID_FROM_DT\n</code></pre>         1. Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD.</li> <li>Inner Join EVOLVE_SAT to PACKAGING ON: EVOLVE_SAT.SPECIFICATION_VERSION_CD = PACKAGING.SPECIFICATION_VERSION_CD.</li> </ol> *Adding Packaging Calculations <ol> <li>Apply calculations and transformations on packaging data weights. See calculations section for more detail.         1.            Secondary            An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item.            <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY\nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre> Tertiary            Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.            <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre> Multipack Calculation            This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.            <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre> Recycled Weight Calculation <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre> Multiple supplier component Calculation            A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:            <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> Final build <ol> <li>Build out final view in column order of the DDL.</li> <li>Load transform schema to ADW_BDV.PACKAGING_COMPONENT_BR.</li> <li>End.</li> </ol>"},{"location":"adw_bdv/bdv_example/#diagram","title":"Diagram","text":"Packaging Component BR Diagram <p><pre><code>   graph TB\n   subgraph Current\n   direction TB\n   subgraph RDV\n   direction TB\n   A[OP] \n   B[AP]\n   C([EVOLVE_SAT])\n   D([VALPAK])\n   end\n   subgraph TS\n   E[/PACKAGING_DATA/]\n   F[/PACKAGING_SPECS/]\n   G[/FILTERED_PACKAGING/]\n   H[/RECYCLING_ADVICE/]\n   I[/PACKAGING_CALCS/]\n   J([DIM_ITEM])\n   end\n   subgraph ADW_BDV\n   direction LR\n   K([PACKAGING_COMPONENT_BR])\n   end\n   A--&gt;|union| E\n   B--&gt;|union| E\n   C--&gt;|get spec statuses and dates|F\n   D--&gt;|union|E\n   E--&gt;G\n   G--&gt;|create correct component weights|H\n   I--&gt;|clean recycling column|K\n   H--&gt;|join packaging with specs|F\n   J--&gt;|filter each packaging source|G\n   F--&gt;I\n   end\n</code></pre> </p>"},{"location":"adw_bdv/bdv_example/#tests-checks","title":"Tests &amp; Checks","text":"Packaging Component BR Validation <p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example_with_table_link/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example_with_table_link/#description","title":"Description","text":"<p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example_with_table_link/#selection-criteria","title":"Selection Criteria","text":"<p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example_with_table_link/#target-to-source","title":"Target to Source","text":"<p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target System Target Table/Xpath/JSON Schema/Other Target Column Source Table/Xpath/JSON Schema/Other Source Column ADW_BDV PACKAGING_COMPONENT_BR *PACKAGING_COMPONENT_CD AP, OP &amp; VALPAK Multiple see step 1 ADW_BDV PACKAGING_COMPONENT_BR *VALID_FROM_DT EVOLVE_SAT &amp; VALPAK EFFECTIVE_FROM_TS, VALID_FROM_TS ADW_BDV PACKAGING_COMPONENT_BR *VALID_TO_DT EVOLVE_SAT &amp; VALPAK nan ADW_BDV PACKAGING_COMPONENT_BR *ITEM_CD AP, OP &amp; VALPAK ITEM_NK1, ITEM_CD ADW_BDV PACKAGING_COMPONENT_BR *SPECIFICATION_VERSION_CD EVOLVE_SAT &amp; VALPAK Multiple see step 7 ADW_BDV PACKAGING_COMPONENT_BR *SPECIFICATION_STATUS EVOLVE_SAT &amp; VALPAK SPECIFICATION_STATUS ADW_BDV PACKAGING_COMPONENT_BR *PACKAGING_CD AP, OP &amp; VALPAK ITEM_PACKAGING_CD ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_CD AP, OP &amp; VALPAK ITEM_PACKAGING_COMPONENT_CD ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT, ITEM_PACKAGING_COMPONENT_DESC, ITEM_PACKAGING_COMPONENT_DESC ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_LEVEL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_LEVEL, PACKAGING_LEVEL_DESC, PACKAGING_LEVEL_DESC ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_MATERIAL_DESC AP, OP &amp; VALPAK PACKAGING_COMPONENT_BASE_MATERIAL_DESC, MATERIAL_DESC, MATERIAL_UNIFORM_CD ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_EXTENDED_MATERIAL_DESC AP, OP &amp; VALPAK COMPONENT_EXTENDED_MATERIAL_DESC, MATERIAL_SPEC_TYPE, MATERIAL_UNIFORM_EXTENDED_MATERIAL ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_SPECIFICATION_DESC AP &amp; OP PACKAGING_DETAIL_SPECIFICATION,ITEM_PACKAGING_COMPONENT_SPECIFICATION, ADW_BDV PACKAGING_COMPONENT_BR *RECYCLING_ADVICE_DESC AP, OP &amp; VALPAK RECYCLING_ADVICE_ICON, MATERIAL_DESC,RECYCLING_ADVICE_CD ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_COLOUR AP &amp; VALPAK PACKAGING_DETAIL_COLOUR, MATERIAL_COLOUR ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS ADW_BDV PACKAGING_COMPONENT_BR *CALCULATED_COMPONENT_WEIGHT_GRAMS nan nan ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_RECYCLED_WEIGHT_GRAMS AP, OP &amp; VALPAK PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS, RECYCLED_WEIGHT, AVERAGE_PACKAGING_RECYCLED_WEIGHT ADW_BDV PACKAGING_COMPONENT_BR *CALCULATED_RECYCLED_WEIGHT_GRAMS nan nan ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_RECYCLED_PCT AP, OP &amp; VALPAK PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT, RECYCLED_PERCENT, RECYCLED_WEIGHT_PCT ADW_BDV PACKAGING_COMPONENT_BR *MULTIPACK_UNITS AP &amp; VALPAK PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK, MULTIPACK_VALUE ADW_BDV PACKAGING_COMPONENT_BR *NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING AP PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_LENGTH_MM AP PACKAGING_COMPONENT_LENGTH_MM ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_WIDTH_MM AP PACKAGING_COMPONENT_WIDTH_MM ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_HEIGHT_MM AP PACKAGING_COMPONENT_HEIGHT_MM ADW_BDV PACKAGING_COMPONENT_BR *FOOD_CONTACT_FLAG AP &amp; OP PACKAGING_COMPONENT_FOOD_CONTACT_IND, FOOD_CONTACT_FLAG ADW_BDV PACKAGING_COMPONENT_BR *SINGLE_USE_PLASTIC_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC ADW_BDV PACKAGING_COMPONENT_BR *LONG_TERM_STORAGE_FLAG AP PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING ADW_BDV PACKAGING_COMPONENT_BR *INDUSTRIAL_COMPOSTABLE_FLAG AP PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE ADW_BDV PACKAGING_COMPONENT_BR *HOME_COMPOSTABLE_RECYCLE_FLAG AP PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE ADW_BDV PACKAGING_COMPONENT_BR *TAMPER_EVIDENT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT ADW_BDV PACKAGING_COMPONENT_BR *TAMPER_EVIDENT_FACT_FLAG AP PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_SUPPLIER AP &amp; OP PACKAGING_DETAIL_PACKAGING_SUPPLIER, PACKAGING_COMPONENT_SUPPLIER ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_COUNTRY_OF_ORIGIN AP &amp; OP PACKAGING_DETAIL_COUNTRY_OF_ORIGIN, COMPONENT_COUNTRY_CD ADW_BDV PACKAGING_COMPONENT_BR *COMPONENT_SUPPLIER_CERTIFICATION AP &amp; OP PACKAGING_DETAIL_SUPPLIER_CERTIFICATION, CERTIFICATION ADW_BDV PACKAGING_COMPONENT_BR *TECHNICAL_METADATA nan nan"},{"location":"adw_bdv/bdv_example_with_table_link/#mapping-steps","title":"Mapping Steps","text":"<ol> <li> *PACKAGING_COMPONENT_CD:<ol> <li><code>AP</code> - ITEM_NK1,ITEM_SPEC_NK1,ITEM_SPEC_NK2,ITEM_PACKAGING_CD,ITEM_PACKAGING_COMPONENT_CD</li> <li><code>OP</code> - ITEM_NK1,ITEM_SPEC_NK1,ITEM_SPEC_NK2,ITEM_PACKAGING_CD,ITEM_PACKAGING_COMPONENT_CD</li> <li><code>VALPAK</code> - PACKAGING_COMPONENT_SK_CD</li> </ol> </li> <li> *VALID_FROM_DT:<ol> <li><code>EVOLVE_SAT</code> - EFFECTIVE_FROM_TS</li> <li><code>VALPAK</code> - VALID_FROM_DT</li> </ol> </li> <li> *VALID_TO_DT:<ol> <li><code>EVOLVE_SAT</code> - Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD</li> <li><code>VALPAK</code> - VALID_TO_DT</li> </ol> </li> <li> *ITEM_CD<ol> <li><code>AP</code> - ITEM_NK1</li> <li><code>OP</code> - ITEM_NK1</li> <li><code>VALPAK</code> - ITEM_CD</li> </ol> </li> <li> *SPECIFICATION_VERSION_CD:<ol> <li><code>EVOLVE_SAT</code> - ITEM_SPEC_NK1, ITEM_SPEC_NK2</li> <li><code>VALPAK</code> - SPECIFICATION_VERSION_SK_CD</li> </ol> </li> <li> *SPECIFICATION_STATUS<ol> <li><code>EVOLVE_SAT</code> - SPECIFICATION_STATUS</li> <li><code>VALPAK</code> - </li> </ol> </li> <li> *PACKAGING_CD<ol> <li><code>AP</code> - ITEM_PACKAGING_CD</li> <li><code>OP</code> - ITEM_PACKAGING_CD</li> <li><code>VALPAK</code> - -2</li> </ol> </li> <li> *COMPONENT_CD<ol> <li><code>AP</code> - ITEM_PACKAGING_COMPONENT_CD</li> <li><code>OP</code> - ITEM_PACKAGING_COMPONENT_CD</li> <li><code>VALPAK</code> - PACKAGING_COMPONENT_SK_CD</li> </ol> </li> <li> *COMPONENT_DESC<ol> <li><code>AP</code> - PACKAGING_COMPONENT_COMPONENT</li> <li><code>OP</code> - ITEM_PACKAGING_COMPONENT_DESC</li> <li><code>VALPAK</code> - ITEM_PACKAGING_COMPONENT_DESC</li> </ol> </li> <li> *COMPONENT_LEVEL_DESC<ol> <li><code>AP</code> - PACKAGING_COMPONENT_LEVEL</li> <li><code>OP</code> - PACKAGING_LEVEL_DESC</li> <li><code>VALPAK</code> - PACKAGING_LEVEL_DESC</li> </ol> </li> <li> *COMPONENT_MATERIAL_DESC<ol> <li><code>AP</code> - PACKAGING_COMPONENT_BASE_MATERIAL_DESC</li> <li><code>OP</code> - MATERIAL_DESC</li> <li><code>VALPAK</code> - MATERIAL_UNIFORM_CD</li> </ol> </li> <li> *COMPONENT_EXTENDED_MATERIAL_DESC<ol> <li><code>AP</code> - COMPONENT_EXTENDED_MATERIAL_DESC</li> <li><code>OP</code> MATERIAL_SPEC_TYPE</li> <li><code>VALPAK</code> - MATERIAL_UNIFORM_EXTENDED_MATERIAL</li> </ol> </li> <li> *COMPONENT_SPECIFICATION_DESC<ol> <li><code>AP</code> - PACKAGING_DETAIL_SPECIFICATION</li> <li><code>OP</code> - ITEM_PACKAGING_COMPONENT_SPECIFICATION</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *RECYCLING_ADVICE_DESC<ol> <li>RECYCLING_ADVICE_ICON</li> <li>MATERIAL_DESC</li> <li>RECYCLING_ADVICE_CD</li> </ol> </li> <li> *COMPONENT_COLOUR<ol> <li>PACKAGING_DETAIL_COLOUR</li> <li>~~</li> <li>MATERIAL_COLOUR</li> </ol> </li> <li> *COMPONENT_WEIGHT_GRAMS<ol> <li>PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS</li> </ol> </li> <li> *CALCULATED_COMPONENT_WEIGHT_GRAMS<ol> <li>Secondary    An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item. <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY  \nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre></li> <li>\"Tertiary\"   Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.         <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre></li> <li>\"Multipack Calculation\"    This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.         <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre></li> <li>\"Recycled Weight Calculation\"   <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre></li> <li>\"Multiple supplier component Calculation\"    A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:         <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> </li> <li> *COMPONENT_RECYCLED_WEIGHT_GRAMS<ol> <li><code>AP</code> - PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS</li> <li><code>OP</code> - RECYCLED_WEIGHT</li> <li><code>VALPAK</code> - AVERAGE_PACKAGING_RECYCLED_WEIGHT</li> </ol> </li> <li> *CALCULATED_RECYCLED_WEIGHT_GRAMS</li> <li> *COMPONENT_RECYCLED_PCT<ol> <li><code>AP</code> - PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT</li> <li><code>OP</code> - RECYCLED_PERCENT</li> <li><code>VALPAK</code> - RECYCLED_WEIGHT_PCT</li> </ol> </li> <li> *MULTIPACK_UNITS<ol> <li><code>AP</code> - PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK </li> <li><code>OP</code> ~~</li> <li><code>VALPAK</code> - MULTIPACK_VALUE</li> </ol> </li> <li> *NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING<ol> <li><code>AP</code> - PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *COMPONENT_LENGTH_MM<ol> <li><code>AP</code> - PACKAGING_COMPONENT_LENGTH_MM</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *COMPONENT_WIDTH_MM<ol> <li><code>AP</code> - PACKAGING_COMPONENT_WIDTH_MM</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *COMPONENT_HEIGHT_MM<ol> <li><code>AP</code> - PACKAGING_COMPONENT_HEIGHT_MM</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *FOOD_CONTACT_FLAG<ol> <li><code>AP</code> - PACKAGING_COMPONENT_FOOD_CONTACT_IND</li> <li><code>OP</code> - FOOD_CONTACT_FLAG</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *SINGLE_USE_PLASTIC_FLAG<ol> <li><code>AP</code> - PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *LONG_TERM_STORAGE_FLAG<ol> <li><code>AP</code> - PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *INDUSTRIAL_COMPOSTABLE_FLAG<ol> <li><code>AP</code> - PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *HOME_COMPOSTABLE_RECYCLE_FLAG<ol> <li><code>AP</code> - PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *TAMPER_EVIDENT_FLAG<ol> <li><code>AP</code> - PACKAGING_DETAIL_TAMPER_EVIDENT</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *TAMPER_EVIDENT_FACT_FLAG<ol> <li><code>AP</code> - PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *COMPONENT_SUPPLIER<ol> <li><code>AP</code> - PACKAGING_DETAIL_PACKAGING_SUPPLIER</li> <li><code>OP</code> - PACKAGING_COMPONENT_SUPPLIER</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *COMPONENT_COUNTRY_OF_ORIGIN<ol> <li><code>AP</code> - PACKAGING_DETAIL_COUNTRY_OF_ORIGIN</li> <li><code>OP</code> - COMPONENT_COUNTRY_CD</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *COMPONENT_SUPPLIER_CERTIFICATION<ol> <li><code>AP</code> - PACKAGING_DETAIL_SUPPLIER_CERTIFICATION</li> <li><code>OP</code> - CERTIFICATION</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *TECHNICAL_METADATA</li> </ol>"},{"location":"adw_bdv/bdv_example_with_table_link/#diagram","title":"Diagram","text":"<pre><code>graph LR\n    subgraph Current\n    direction LR\n        subgraph BUILD\n        direction LR\n        A[OP] \n        B[AP]\n        C[(SAT)]\n        A[(OP)]--&gt;|union| D[/PACKAGING_CTE/]\n        B[(AP)]--&gt;|union| D\n        I[(DIM_ITEM)]--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n        J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n        C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n        F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n        E([VALPAK])--&gt;|union|D\n        K--&gt;|join packaging with specs|F\n        D--&gt;J\n        end\n        subgraph ADW_BDV\n        direction LR\n        H--&gt;G([PACKAGING_COMPONENT_BR])\n        end\n    end\n</code></pre>"},{"location":"adw_bdv/bdv_example_with_table_link/#tests-checks","title":"Tests &amp; Checks","text":"<p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/bdv_example_without_table/","title":"PACKAGING_COMPONENT_BR","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/bdv_example_without_table/#description","title":"Description","text":"<p>This object is the atomic level bridge table for packaging data. Containing both Evolve Food and Valpak, this performs all the cleaning and calculations that need to take place prior to being consumed in the PL layer. This object supports <code>DIM_PACKAGING_COMPONENT</code> and <code>ITEM_SPECIFICATION_COMPONENT_BR</code> which is a table that combines Sales, Supplier and Packaging data for the reporting requirements in Plan for Better Plastics.</p>"},{"location":"adw_bdv/bdv_example_without_table/#selection-criteria","title":"Selection Criteria","text":"<p>This BDV object contains two sources, as a result we must identify which data we want to take from each source and ensure no duplication in the data. We are also only concerned with own brand items. Valpak is GM, plus loose food &amp; bakery, Evolve is all other food items. Filter criteria is based from ADW_BDV.ITEM_BR joining on ITEM_BR.ITEM_CD = PACKAGING.ITEM_CD, this criteria is applied in step 5 of the build.</p> <p>Own Brand Criteria</p> <pre><code>OWN_BRAND_FLAG = 'Y'\n</code></pre> <p>Valpak Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\nELSE SUB_CAT_CD\n</code></pre> <p>Evolve Criteria</p> <pre><code>BUSINESS_UNIT_CD IN (5699,3210)\nSUB_CAT_CD NOT IN (184,319,325,350,353,438,468,502,503,533,607,654,849,850,856,876,877,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,912,913,929,943)\n</code></pre>"},{"location":"adw_bdv/bdv_example_without_table/#target-to-source","title":"Target to Source","text":"<p>The below tables will be used in the build and have the following as aliases:</p> <ul> <li><code>ADW_PRODUCT_TRAN.ITEM_PACKAGING_COMPONENT_VALPAK_HIST_BR_LOGIC_2</code> as <code>VALPAK</code></li> <li><code>ADW_RDV.ADVANCED_PACKAGING_COMPONENT_LINK</code> as <code>AP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_ITEM_PACKAGING_COMPONENT_LINK</code> as <code>OP</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_EVOLVE_SAT</code> as <code>EVOLVE SAT</code></li> <li><code>ADW_RDV.ITEM_SPECIFICATION_MATERIAL_REF</code> as <code>MAT_REF</code></li> <li><code>ADW_PRODUCT_TRAN.EVOLVE_VALPAK_RECYCLE_ADVICE_REF</code> as <code>RECYCLING_ADVICE</code></li> <li><code>ADW_BDV.ITEM_BR</code></li> </ul> <p>Target System: ADW_BDV Target Table: ITEM_PACKAGING_COMPONENT_BR Target to Source Mapping:</p> <ol> <li> *PACKAGING_COMPONENT_CD:<ol> <li><code>AP</code> - ITEM_NK1,ITEM_SPEC_NK1,ITEM_SPEC_NK2,ITEM_PACKAGING_CD,ITEM_PACKAGING_COMPONENT_CD</li> <li><code>OP</code> - ITEM_NK1,ITEM_SPEC_NK1,ITEM_SPEC_NK2,ITEM_PACKAGING_CD,ITEM_PACKAGING_COMPONENT_CD</li> <li><code>VALPAK</code> - PACKAGING_COMPONENT_SK_CD</li> </ol> </li> <li> *VALID_FROM_DT:<ol> <li><code>EVOLVE_SAT</code> - EFFECTIVE_FROM_TS</li> <li><code>VALPAK</code> - VALID_FROM_DT</li> </ol> </li> <li> *VALID_TO_DT:<ol> <li><code>EVOLVE_SAT</code> - Add in a VALID_TO_DT using EFFECTIVE_FROM_TS - 1 of the new SPECIFICATION_CD</li> <li><code>VALPAK</code> - VALID_TO_DT</li> </ol> </li> <li> *ITEM_CD<ol> <li><code>AP</code> - ITEM_NK1</li> <li><code>OP</code> - ITEM_NK1</li> <li><code>VALPAK</code> - ITEM_CD</li> </ol> </li> <li> *SPECIFICATION_VERSION_CD:<ol> <li><code>EVOLVE_SAT</code> - ITEM_SPEC_NK1, ITEM_SPEC_NK2</li> <li><code>VALPAK</code> - SPECIFICATION_VERSION_SK_CD</li> </ol> </li> <li> *SPECIFICATION_STATUS<ol> <li><code>EVOLVE_SAT</code> - SPECIFICATION_STATUS</li> <li><code>VALPAK</code> - </li> </ol> </li> <li> *PACKAGING_CD<ol> <li><code>AP</code> - ITEM_PACKAGING_CD</li> <li><code>OP</code> - ITEM_PACKAGING_CD</li> <li><code>VALPAK</code> - -2</li> </ol> </li> <li> *COMPONENT_CD<ol> <li><code>AP</code> - ITEM_PACKAGING_COMPONENT_CD</li> <li><code>OP</code> - ITEM_PACKAGING_COMPONENT_CD</li> <li><code>VALPAK</code> - PACKAGING_COMPONENT_SK_CD</li> </ol> </li> <li> *COMPONENT_DESC<ol> <li><code>AP</code> - PACKAGING_COMPONENT_COMPONENT</li> <li><code>OP</code> - ITEM_PACKAGING_COMPONENT_DESC</li> <li><code>VALPAK</code> - ITEM_PACKAGING_COMPONENT_DESC</li> </ol> </li> <li> *COMPONENT_LEVEL_DESC<ol> <li><code>AP</code> - PACKAGING_COMPONENT_LEVEL</li> <li><code>OP</code> - PACKAGING_LEVEL_DESC</li> <li><code>VALPAK</code> - PACKAGING_LEVEL_DESC</li> </ol> </li> <li> *COMPONENT_MATERIAL_DESC<ol> <li><code>AP</code> - PACKAGING_COMPONENT_BASE_MATERIAL_DESC</li> <li><code>OP</code> - MATERIAL_DESC</li> <li><code>VALPAK</code> - MATERIAL_UNIFORM_CD</li> </ol> </li> <li> *COMPONENT_EXTENDED_MATERIAL_DESC<ol> <li><code>AP</code> - COMPONENT_EXTENDED_MATERIAL_DESC</li> <li><code>OP</code> MATERIAL_SPEC_TYPE</li> <li><code>VALPAK</code> - MATERIAL_UNIFORM_EXTENDED_MATERIAL</li> </ol> </li> <li> *COMPONENT_SPECIFICATION_DESC<ol> <li><code>AP</code> - PACKAGING_DETAIL_SPECIFICATION</li> <li><code>OP</code> - ITEM_PACKAGING_COMPONENT_SPECIFICATION</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *RECYCLING_ADVICE_DESC<ol> <li>RECYCLING_ADVICE_ICON</li> <li>MATERIAL_DESC</li> <li>RECYCLING_ADVICE_CD</li> </ol> </li> <li> *COMPONENT_COLOUR<ol> <li>PACKAGING_DETAIL_COLOUR</li> <li>~~</li> <li>MATERIAL_COLOUR</li> </ol> </li> <li> *COMPONENT_WEIGHT_GRAMS<ol> <li>PACKAGING_COMPONENT_COMPONENT_WEIGHT_GRAMS</li> </ol> </li> <li> *CALCULATED_COMPONENT_WEIGHT_GRAMS<ol> <li>Secondary    An item has secondary packaging, this is not sold to the consumer and will be for example a box containing multiple skus. We must divide the weight of this secondary component to give an actual value sold per item as to not inflate the overall packaging weight of the item. <pre><code>COMPONENT_WEIGHT / CASE_CRATE_SHIPPER_QTY  \nExample :\nCase component weight = 352.59 g\nCase crate shipper quantity = 12\nSecondary Calculated weight = 352.59/12 = 29.3 g\n</code></pre></li> <li>\"Tertiary\"   Similar to the secondary calculation there is also tertiary packaging. This will usually be the pallet and any materials used to secure the pallet. Again we need to divide the weights to provide a correct weight per item.         <pre><code>COMPONENT_WEIGHT / (CASE_CRATE_SHIPPER_QTY * TOTAL_CASES_PER_PALLET_LAYER_QTY)\nExample :\nStretch Wrap component weight = 250\nCase crate shipper quantity = 12\nCase crate total cases per pallet = 42\nTertiary Calculated weight = 250/(12*42) = 0.49603 g\n</code></pre></li> <li>\"Multipack Calculation\"    This is the opposite of the previous two calculations. When we sell multipacks the weight assigned is only equivalent to one item. In this case we must multiply the weight by the no. of items in the pack.         <pre><code>CONSUMER_PACK_QTY * COMPONENT_WEIGHT\nExample :\nComponent weight from Evolve for bottle = 34 gm\nCalculated Weight for Bottle = 4 * 34 gm = 136 gm\n</code></pre></li> <li>\"Recycled Weight Calculation\"   <pre><code>Calculated Recycled Content Weight =% Recycled Content * Calculated Component Weight\n</code></pre></li> <li>\"Multiple supplier component Calculation\"    A spefication and version has multiple suppliers of a component, for example in our data we will have three entries against a bottle, however only one bottle will have sold in the store. Therefore we have to take this into consideration when building both fact views. For packaging we have worked out the average value of the three components, then divided by the no. of components to give an accurate figure when rolling up to the views consumed by the business:         <pre><code>Bottle 32g,Bottle 36g, Bottle 33g\nAverage value = 33.6 g / 3 = 11.2 g\n</code></pre></li> </ol> </li> <li> *COMPONENT_RECYCLED_WEIGHT_GRAMS<ol> <li><code>AP</code> - PACKAGING_DETAIL_WEIGHT_OF_RECYCLED_GRAMS</li> <li><code>OP</code> - RECYCLED_WEIGHT</li> <li><code>VALPAK</code> - AVERAGE_PACKAGING_RECYCLED_WEIGHT</li> </ol> </li> <li> *CALCULATED_RECYCLED_WEIGHT_GRAMS</li> <li> *COMPONENT_RECYCLED_PCT<ol> <li><code>AP</code> - PACKAGING_DETAIL_PERCENT_POST_CONSUMER_RECYCLED_CONTENT</li> <li><code>OP</code> - RECYCLED_PERCENT</li> <li><code>VALPAK</code> - RECYCLED_WEIGHT_PCT</li> </ol> </li> <li> *MULTIPACK_UNITS<ol> <li><code>AP</code> - PACKAGING_DETAIL_NUMBER_OF_PRIMARY_PACKAGING_COMPONENTS_IN_EACH_RETAIL_UNIT_EG_MULTIPACK </li> <li><code>OP</code> ~~</li> <li><code>VALPAK</code> - MULTIPACK_VALUE</li> </ol> </li> <li> *NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING<ol> <li><code>AP</code> - PACKAGING_DETAIL_NUMBER_OF_RETAIL_UNITS_IN_SECONDARY_OR_TERTIARY_PACKAGING_COMPONENT</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *COMPONENT_LENGTH_MM<ol> <li><code>AP</code> - PACKAGING_COMPONENT_LENGTH_MM</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *COMPONENT_WIDTH_MM<ol> <li><code>AP</code> - PACKAGING_COMPONENT_WIDTH_MM</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *COMPONENT_HEIGHT_MM<ol> <li><code>AP</code> - PACKAGING_COMPONENT_HEIGHT_MM</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *FOOD_CONTACT_FLAG<ol> <li><code>AP</code> - PACKAGING_COMPONENT_FOOD_CONTACT_IND</li> <li><code>OP</code> - FOOD_CONTACT_FLAG</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *SINGLE_USE_PLASTIC_FLAG<ol> <li><code>AP</code> - PACKAGING_DETAIL_CLASSIFIED_AS_SINGLE_USE_PLASTIC</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *LONG_TERM_STORAGE_FLAG<ol> <li><code>AP</code> - PACKAGING_DETAIL_CLASSIFIED_AS_LONG_TERM_STORAGE_PACKAGING</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *INDUSTRIAL_COMPOSTABLE_FLAG<ol> <li><code>AP</code> - PACKAGING_DETAIL_INDUSTRIAL_COMPOSTABLE_TO_EN13432_DONT_RECYCLE</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *HOME_COMPOSTABLE_RECYCLE_FLAG<ol> <li><code>AP</code> - PACKAGING_DETAIL_HOME_COMPOSTABLE_TO_OK_HOME_COMPOST_PROTOCAL_DONT_RECYCLE</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *TAMPER_EVIDENT_FLAG<ol> <li><code>AP</code> - PACKAGING_DETAIL_TAMPER_EVIDENT</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *TAMPER_EVIDENT_FACT_FLAG<ol> <li><code>AP</code> - PACKAGING_DETAIL_TAMPER_EVIDENT_FACTOR</li> <li><code>OP</code> - ~~</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *COMPONENT_SUPPLIER<ol> <li><code>AP</code> - PACKAGING_DETAIL_PACKAGING_SUPPLIER</li> <li><code>OP</code> - PACKAGING_COMPONENT_SUPPLIER</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *COMPONENT_COUNTRY_OF_ORIGIN<ol> <li><code>AP</code> - PACKAGING_DETAIL_COUNTRY_OF_ORIGIN</li> <li><code>OP</code> - COMPONENT_COUNTRY_CD</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *COMPONENT_SUPPLIER_CERTIFICATION<ol> <li><code>AP</code> - PACKAGING_DETAIL_SUPPLIER_CERTIFICATION</li> <li><code>OP</code> - CERTIFICATION</li> <li><code>VALPAK</code> - ~~</li> </ol> </li> <li> *TECHNICAL_METADATA</li> </ol>"},{"location":"adw_bdv/bdv_example_without_table/#diagram","title":"Diagram","text":"<pre><code>graph TB\n    subgraph Current\n    direction TB\n        subgraph RDV\n        direction TB\n        A[OP] \n        B[AP]\n        C([EVOLVE_SAT])\n        E([VALPAK])\n        end\n        subgraph TS\n        A([OP])--&gt;|union| D[/PACKAGING_DATA/]\n        B([AP])--&gt;|union| D\n        I([DIM_ITEM])--&gt;|filter each packaging source|J[/FILTERED_PACKAGING/]\n        J--&gt;|clean recycling column|K[/RECYCLING_ADVICE/]\n        C--&gt;|get spec statuses and dates|F[/PACKAGING_SPECS/]\n        F--&gt;|create correct component weights|H[/PACKAGING_CALCS/]\n        E--&gt;|union|D\n        K--&gt;|join packaging with specs|F\n        D--&gt;J\n        end\n        subgraph ADW_BDV\n        direction LR\n        H--&gt;G([PACKAGING_COMPONENT_BR])\n        end\n    end\n</code></pre>"},{"location":"adw_bdv/bdv_example_without_table/#tests-checks","title":"Tests &amp; Checks","text":"<p>Please evidence checks below:</p> <ul> <li> No duplicate spec &amp; version across the 3 sources</li> <li> Unique row per primary keys. PACKAGING_COMPONENT_CD &amp; VALID_FROM_DT/VALID_TO_DT</li> <li> All weight calculations applied</li> <li> Recycling Advice has been cleaned</li> </ul>"},{"location":"adw_bdv/mapping_spec_template/","title":"INSERT BDV OBJECT NAME HERE","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_bdv/mapping_spec_template/#description","title":"Description","text":"<p>Provide a brief description of the BDV object, include any specifics around the business context and PL objects dependent as applicable.</p>"},{"location":"adw_bdv/mapping_spec_template/#selection-criteria","title":"Selection Criteria","text":"<p>Provide detailed description of the sources used to populate the BDV Object. Include the business entities that link to the sources used with examples, plus any filters applied while ingesting from source. Include details of any RDV/BDV objects used to populate this BDV object.</p> <p>Source Criteria <pre><code>Include filters applied here.\nDuplicate this section if multiple filters apply.\n</code></pre></p>"},{"location":"adw_bdv/mapping_spec_template/#target-to-source","title":"Target to Source","text":"<p>Include the table names to be combined and mapped in the specification. You can use aliases such as:</p> <ul> <li><code>&lt;SCHEMA_NAME&gt;.&lt;TABLE_NAME&gt;</code> as <code>A</code></li> <li><code>&lt;SCHEMA_NAME&gt;.&lt;TABLE_NAME&gt;</code> as <code>B</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Order Target Column Source Table Source Column Mapping Rules 1 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule 2 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule 3 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule 4 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule 5 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule 6 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule 7 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule 8 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule 9 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule 10 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule 11 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule 12 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule 13 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule 14 COLUMN_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME Add selection rule"},{"location":"adw_bdv/mapping_spec_template/#mapping-steps","title":"Mapping Steps","text":"<ol> <li>Create steps to detail how the data is selected correctly, including but not limited to: Data cleansing, De-duplication &amp; Business rules applied.</li> <li>For example, any cleansing steps can be documented through code blocks, as can be seen in the below example.<ol> <li>Data Cleansing<ol> <li> Dataset Cleaning - Duplicate each of the sections below based on the complexity of logic Remove Dummy Data <pre><code>Remove COLUMN_NAME= \"\" when COLUMN_NAME contains \"DO NOT USE\"\n</code></pre> Clean Source Data <pre><code>Trim COLUMN_NAME having leading/trailing spaces\nRemove specific pattern based values found in COLUMN_NAME\n</code></pre> </li> </ol> </li> </ol> </li> <li>Apply calculations based on the relevant business logic. See calculation section below for more detail:<ol> <li> Calculations - Duplicate each of the sections below based on the complexity of logic and number of calculated attributes/metrics Calculation 1 Provide a definition of the calculated metric and business logic applicable for the same. <pre><code>Provide the logic/formula used for the calculation - Include the column names used as well.\nExample :\nProvide an example based on values from dependent columns to explain the desired outcome for the calculation.\n</code></pre> Calculation 2 Provide a definition of the calculated metric and business logic applicable for the same. <pre><code>Provide the logic/formula used for the calculation - Include the column names used as well.\nExample :\nProvide an example based on values from dependent columns to explain the desired outcome for the calculation.\n</code></pre> </li> </ol> </li> <li> <p>Document any logic involving combining datasets at various points of the mapping steps using the section below:</p> <ol> <li> Table Logic <pre><code>Lookup TABLE_NAME_A USING COLUMN_A &amp; COLUMN_B to retrieve COLUMN_C\nCombine TABLE_NAME_A &amp; TABLE_NAME_B using COLUMN_A &amp; COLUMN_B\n</code></pre> </li> <li>Combine all of the above datasets.</li> <li>Load transform schema to table.</li> <li>End.</li> </ol> </li> </ol>"},{"location":"adw_bdv/mapping_spec_template/#diagram","title":"Diagram","text":"<pre><code>flowchart LR\nsubgraph \"Join 2 Datasets\"\na(\"TABLE_NAME_A\")\nb(\"TABLE_NAME_B\")\nc(\"TABLE_NAME_C\")\na-- COLUMN_1,COLUMN_2 --&gt;c\nb-- COLUMN_1,COLUMN_2 --&gt;c\nend \nsubgraph \"Combine 2 Datasets via Union\"\nd(\"TABLE_NAME_D\")\ne(\"TABLE_NAME_E\")\nf(((union)))\ng(\"Apply Dataset Calculations\")\nd--&gt;f\ne--&gt;f\nf--&gt;g\nend\np[Combine Dataset Calculations &amp; TABLE_NAME_C]\ng--&gt;p\nc--&gt;p\nu(TARGET_BDV_OBJECT_NAME)\np--&gt;u\n</code></pre>"},{"location":"adw_bdv/mapping_spec_template/#tests-checks","title":"Tests &amp; Checks","text":"<p>Original Tests (These are based on the mapping steps):</p> <ul> <li> Calculations Applied (Duplicate as required with specifics)</li> <li> Business Logic Applied (Duplicate as required with specifics)</li> <li> BDV Reconciles with Source/Equivalent Datasets based on set criteria</li> <li> Calculations verified &amp; signed off by Business/End User</li> </ul> <p>New Tests (To be defined post handover - Duplicate as required):</p> <ul> <li> New Test Scenario 1</li> <li> New Test Scenario 2</li> <li> New Test Scenario 3</li> <li> New Test Scenario 4</li> </ul>"},{"location":"adw_pl/mapping_spec_template/","title":"INSERT PL OBJECT NAME HERE","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_pl/mapping_spec_template/#description","title":"Description","text":"<p>Provide a brief description of the PL object, include any specifics around the business context.</p>"},{"location":"adw_pl/mapping_spec_template/#selection-criteria","title":"Selection Criteria","text":"<p>Provide detailed description of the sources used to populate the PL Object. Include the business entities that link to the sources used with examples, plus any filters applied while ingesting from source. Include details of any RDV/BDV objects used to populate this PL object.</p> <p>Source Criteria <pre><code>Include filters applied here.\nDuplicate this section if multiple filters apply.\n</code></pre></p>"},{"location":"adw_pl/mapping_spec_template/#target-to-source","title":"Target to Source","text":"<p>Include the table names to be combined and mapped in the specification. You can use aliases such as:</p> <ul> <li><code>&lt;SCHEMA_NAME&gt;.&lt;TABLE_NAME&gt;</code> as <code>A</code></li> <li><code>&lt;SCHEMA_NAME&gt;.&lt;TABLE_NAME&gt;</code> as <code>B</code></li> </ul> <p>Target system for this object is ADW_&lt;IRM&gt;_PL.</p> Target System Target Table/Xpath/JSON Schema/Other Target Column Transformation/Mapping rules Source System Source Table/Xpath/JSON Schema/Other Source Column ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_IRM_PL PL_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME"},{"location":"adw_pl/mapping_spec_template/#mapping-steps","title":"Mapping Steps","text":"<ol> <li>Create steps to detail how the data is selected correctly, including but not limited to: Data cleansing, De-duplication &amp; Business rules applied. (Note: If the PL Object is a view, this section can be summarised)</li> <li>For example, any cleansing steps can be documented through code blocks, as can be seen in the below example.<ol> <li>Data Cleansing<ol> <li> Dataset Cleaning - Duplicate each of the sections below based on the complexity of logic Remove Dummy Data <pre><code>Remove COLUMN_NAME= \"\" when COLUMN_NAME contains \"DO NOT USE\"\n</code></pre> Clean Source Data <pre><code>Trim COLUMN_NAME having leading/trailing spaces\nRemove specific pattern based values found in COLUMN_NAME\n</code></pre> </li> </ol> </li> </ol> </li> <li>Apply calculations based on the relevant business logic. See calculation section below for more detail:<ol> <li> Calculations - Duplicate each of the sections below based on the complexity of logic and number of calculated attributes/metrics Calculation 1 Provide a definition of the calculated metric and business logic applicable for the same. <pre><code>Provide the logic/formula used for the calculation - Include the column names used as well.\nExample :\nProvide an example based on values from dependent columns to explain the desired outcome for the calculation.\n</code></pre> Calculation 2 Provide a definition of the calculated metric and business logic applicable for the same. <pre><code>Provide the logic/formula used for the calculation - Include the column names used as well.\nExample :\nProvide an example based on values from dependent columns to explain the desired outcome for the calculation.\n</code></pre> </li> </ol> </li> <li> <p>Document any logic involving combining datasets at various points of the mapping steps using the section below:</p> <ol> <li> Table Logic <pre><code>Lookup TABLE_NAME_A USING COLUMN_A &amp; COLUMN_B to retrieve COLUMN_C\nCombine TABLE_NAME_A &amp; TABLE_NAME_B using COLUMN_A &amp; COLUMN_B\n</code></pre> </li> <li>Combine all of the above datasets.</li> <li>Load transform schema to table.</li> <li>End.</li> </ol> </li> </ol>"},{"location":"adw_pl/mapping_spec_template/#diagram","title":"Diagram","text":"<pre><code>flowchart LR\nsubgraph \"Presentation Layer Flow\"\na(\"BDV_OBJECT_NAME\")\nb(\"PL_OBJECT_NAME\")\na--Straight Select --&gt;b\nend\n</code></pre>"},{"location":"adw_pl/mapping_spec_template/#tests-checks","title":"Tests &amp; Checks","text":"<p>Original Tests (These are based on the mapping steps):</p> <ul> <li> Calculations Applied (Duplicate as required with specifics)</li> <li> Business Logic Applied (Duplicate as required with specifics)</li> <li> PL Reconciles with Source/Equivalent Datasets based on set criteria</li> <li> Calculations verified &amp; signed off by Business/End User</li> </ul> <p>New Tests (To be defined post handover - Duplicate as required):</p> <ul> <li> New Test Scenario 1</li> <li> New Test Scenario 2</li> <li> New Test Scenario 3</li> <li> New Test Scenario 4</li> </ul>"},{"location":"adw_pl/pl_example/","title":"FACT_ITEM_SPECIFICATION_COMPONENT","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_pl/pl_example/#description","title":"Description","text":"<p>This object is the atomic level fact view for packaging. Containing component level data, this view intends to analyse all packaging types at all packaging levels. The view is set to calendar month to aid in EPR reporting.</p>"},{"location":"adw_pl/pl_example/#selection-criteria","title":"Selection Criteria","text":"<p>This object is built from ITEM_SPECIFICATION_COMPONENT_BR, that tables time granulairty is date. For this view calendar month is required, lookup TRAN_DT against DIM_DATE.DATE_DT and return CALNDR_PERIOD_NUM.</p>"},{"location":"adw_pl/pl_example/#target-to-source","title":"Target to Source","text":"Target System Target Table/Xpath/JSON Schema/Other Target Column Transformation/Mapping rules Source System Source Table/Xpath/JSON Schema/Other Source Column ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT ITEM_CD Direct from BR ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR ITEM_CD ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT SPECIFICATION_VERSION_CD Direct from BR ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR SPECIFICATION_VERSION_CD ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT PACKAGING_COMPONENT_CD Concat of ITEM_CD, SPECIFICATION_VERSION_CD, PACKAGING_CD, COMPONENT_CD ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR nan ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT ALPHANUMERIC_SUPPLIER_CD Direct from BR ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR ALPHANUMERIC_SUPPLIER_CD ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT RECYCLING_ADVICE_ICON Direct from BR ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR RECYCLING_ADVICE_ICON ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT COUNTRY Direct from BR ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR COUNTRY ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT CALNDR_PERIOD_NUM See selection criteria ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR TRAN_DT ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT FULFILMENT_CHANNEL_CD Direct from BR ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR FULFILMENT_CHANNEL_CD ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT COMPONENT_WEIGHT Direct from BR ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR COMPONENT_WEIGHT ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT COMPONENT_RECYCLED_WEIGHT Direct from BR ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR COMPONENT_RECYCLED_WEIGHT ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT RECYCLED_WEIGHT_PCT Direct from BR ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR RECYCLED_WEIGHT_PCT ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT SALES_VOLUME Direct from BR ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR SALES_VOLUME ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT TOTAL_TONNAGE Direct from BR ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR TOTAL_TONNAGE ADW_PRODUCT_PL FACT_ITEM_SPECIFICATION_COMPONENT RECYCLED_TONNAGE Direct from BR ADW_BDV ITEM_SPECIFICATION_COMPONENT_BR RECYCLED_TONNAGE"},{"location":"adw_pl/pl_example/#mapping-steps","title":"Mapping Steps","text":"<ol> <li>This is a simple build almost taking an exact replica of ITEM_SPECIFICATION_COMPONENT_BR, however there is one requirement to aggregate the data to CALNDR_PERIOD_NUM instead of TRAN_DT.</li> <li>Join the BR table to DIM_DATE using TRAN_DT = DATE_DT</li> <li>Concatenate the below keys with ~ in between each key as PACKAGING_COMPONENT_CD    <pre><code>ITEM_CD\nSPECIFICATION_VERSION_CD\nPACKAGING_CD\nCOMPONENT_CD\n</code></pre>    This is the primary key to link to DIM_PACKAGING_COMPONENT</li> <li>Aggregate metrics to CALNDR_PERIOD_NUM</li> <li>SUM(COMPONENT_RECYCLED_WEIGHT)/SUM(COMPONENT_WEIGHT) for RECYCLED_WEIGHT_PCT</li> <li>End</li> </ol>"},{"location":"adw_pl/pl_example/#diagram","title":"Diagram","text":"<pre><code>flowchart LR\nsubgraph \"BDV\"\nd(\"ITEM_SPECIFICATION_COMPONENT_BR\")\nend\nsubgraph \"PL\"\nu(FACT_ITEM_SPECIFICATION_COMPONENT)\nd--&gt;u\nend\n</code></pre>"},{"location":"adw_pl/pl_example/#tests-checks","title":"Tests &amp; Checks","text":"<ul> <li> Object is aggregated to calendar month</li> <li> Object metrics deaggregate to source table values</li> </ul>"},{"location":"adw_rdv/mapping_spec_template/","title":"INSERT RDV OBJECT NAME HERE","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_rdv/mapping_spec_template/#description","title":"Description","text":"<p>Provide a brief description of the RDV object, include any specifics around the business context and BDV/PL objects dependent as applicable.</p>"},{"location":"adw_rdv/mapping_spec_template/#selection-criteria","title":"Selection Criteria","text":"<p>Provide detailed description of the sources used to populate the RDV Object. Include the business entities that link to the sources used with examples, plus any filters applied while ingesting from source. Include details of any RDV/BDV objects used to populate this BDV object.</p> <p>Source Criteria <pre><code>Include filters applied here.\nDuplicate this section if multiple filters apply.\n</code></pre></p>"},{"location":"adw_rdv/mapping_spec_template/#target-to-source","title":"Target to Source","text":"<p>Include the table names to be combined and mapped in the specification. You can use aliases such as:</p> <ul> <li><code>&lt;SCHEMA_NAME&gt;.&lt;TABLE_NAME&gt;</code> as <code>A</code></li> <li><code>&lt;SCHEMA_NAME&gt;.&lt;TABLE_NAME&gt;</code> as <code>B</code></li> </ul> <p>Target system for this object is ADW_BDV.</p> Target System Target Table/Xpath/JSON Schema/Other Target Column Transformation/Mapping rules Source System Source Table/Xpath/JSON Schema/Other Source Column ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME ADW_RDV RDV_OBJECT_NAME COLUMN_NAME Add selection rule SOURCE_SCHEMA_NAME SOURCE_OBJECT_NAME SOURCE_COLUMN_NAME"},{"location":"adw_rdv/mapping_spec_template/#mapping-steps","title":"Mapping Steps","text":"<ol> <li>Create steps to detail how the data is selected correctly, including but not limited to: Data cleansing, De-duplication &amp; Business rules applied.</li> <li> <p>For example, any cleansing steps can be documented through code blocks, as can be seen in the below example.</p> <ol> <li>Data Cleansing<ol> <li> Dataset Cleaning - Duplicate each of the sections below based on the complexity of logic Remove Dummy Data <pre><code>Remove COLUMN_NAME= \"\" when COLUMN_NAME contains \"DO NOT USE\"\n</code></pre> </li> </ol> </li> </ol> </li> <li> <p>Document any logic involving combining datasets at various points of the mapping steps using the section below:</p> <ol> <li> Table Logic <pre><code>Lookup TABLE_NAME_A USING COLUMN_A &amp; COLUMN_B to retrieve COLUMN_C\nCombine TABLE_NAME_A &amp; TABLE_NAME_B using COLUMN_A &amp; COLUMN_B\n</code></pre> </li> <li>Combine all of the above datasets.</li> <li>Load transform schema to table.</li> <li>End.</li> </ol> </li> </ol>"},{"location":"adw_rdv/mapping_spec_template/#diagram","title":"Diagram","text":"<pre><code>flowchart LR\nsubgraph \"Stage\"\nd(\"Stage Table Name\")\nend\nu(TARGET_RDV_OBJECT_NAME)\nd--&gt;u\n</code></pre>"},{"location":"adw_rdv/mapping_spec_template/#tests-checks","title":"Tests &amp; Checks","text":"<p>Tests (To be defined post handover - Duplicate as required):</p> <ul> <li> New Test Scenario 1</li> <li> New Test Scenario 2</li> <li> New Test Scenario 3</li> <li> New Test Scenario 4</li> </ul>"},{"location":"adw_rdv/rdv_example/","title":"ITEM SPECIFICATION EVOLVE SAT","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_rdv/rdv_example/#description","title":"Description","text":"<p>This is the Satellite for Evolve Food, sourced from the Evolve System and stage table Evolve Kafka Raw Product. The object contains Specification &amp; Versions as NK1 &amp; NK2, these are the unique agreements between Sainsburys and a supplier. The object also contains key status changes and the dates related to those.</p>"},{"location":"adw_rdv/rdv_example/#selection-criteria","title":"Selection Criteria","text":"<p>Within the Evolve Kafka topic there are five categories <code>Food,FNF,BWS,CNF,Produce</code>. When loading to certain columns which is specified in the source to target you will need to map to the below to capture every category in the load.</p> <p>Source Criteria <pre><code>IF ret/specTypeFormat/specType = FOOD THEN ret/specificationSectionDetail/specificationSectionFoodMainDetailsSection/\"followed by relevant field\"\nIF ret/specTypeFormat/specType = FNF THEN ret/specificationSectionDetail/specificationSectionFNFMainDetailsSection/\"followed by relevant field\" \nIF ret/specTypeFormat/specType = BWS THEN ret/specificationSectionDetail/specificationSectionBWSMainDetailsSection/\"followed by relevant field\"\nIF ret/specTypeFormat/specType = CNF THEN ret/specificationSectionDetail/specificationSectionCNFMainDetailsSection/\"followed by relevant field\"\nIF ret/specTypeFormat/specType = PRODUCE THEN ret/specificationSectionDetail/specificationSectionProduceMainDetailsSection/\"followed by relevant field\"\n</code></pre></p>"},{"location":"adw_rdv/rdv_example/#target-to-source","title":"Target to Source","text":"<ul> <li>Target system for this object is ADW_RDV </li> <li>Target table is ITEM_SPECIFICATION_EVOLVE_SAT</li> <li>Source system is ADW_STAGE</li> <li>Source table is EVOLVE_KAFKA_RAW_PRODUCT</li> </ul> <pre><code>ITEM_NK1 mapped from ret/specNumber/\n</code></pre> Target System Target Table/Xpath/JSON Schema/Other Target Column Transformation/Mapping rules Source System Source Table/Xpath/JSON Schema/Other Source Column ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT ITEM_SPEC_NK1 Direct Map ADW_STAGE EVOLVE_KAFKA_RAW_PRODUCT Map to ret/specNumber/ ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT ITEM_SPEC_NK2 Direct Map ADW_STAGE EVOLVE_KAFKA_RAW_PRODUCT Map to ret/specVersion/ ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT ITEM_SPEC_NK3 Populate with ~~ ADW_STAGE EVOLVE_KAFKA_RAW_PRODUCT Set to  ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT LOAD_TS ETL Generated nan nan nan ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT ITEM_SPEC_STATUS Direct Map ADW_STAGE EVOLVE_KAFKA_RAW_PRODUCT ret/productSpecificationStatus/status ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT ITEM_SPEC_TITLE Direct Map ADW_STAGE EVOLVE_KAFKA_RAW_PRODUCT ret/title/ ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT ISMULTI_PACK_FLAG Direct Map ADW_STAGE EVOLVE_KAFKA_RAW_PRODUCT ret/isMultipack/ ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT ITEM_SPEC_HIST_AMENDMENT_CD See selection criteria &amp; source column ADW_STAGE EVOLVE_KAFKA_RAW_PRODUCT ret/specificationSectionDetail/specificationSectionFoodMainDetailsSection/specificationHistory/id ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT ITEM_SPEC_AMENDMENT_DT See selection criteria &amp; source column ADW_STAGE EVOLVE_KAFKA_RAW_PRODUCT ret/specificationSectionDetail/specificationSectionFoodMainDetailsSection/specificationHistory/amendmentDate ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT ITEM_SPEC_AMENDMENT_COMMENTS See selection criteria &amp; source column ADW_STAGE EVOLVE_KAFKA_RAW_PRODUCT ret/specificationSectionDetail/specificationSectionFoodMainDetailsSection/specificationHistory/comments ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT ITEM_SPEC_ACTUAL_LAUNCH_DT See selection criteria &amp; source column ADW_STAGE EVOLVE_KAFKA_RAW_PRODUCT ret/specificationSectionDetail/specificationSectionFoodMainDetailsSection/actualLaunchDate ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT ITEM_SPEC_RETAILER_APPROVAL_DT See selection criteria &amp; source column ADW_STAGE EVOLVE_KAFKA_RAW_PRODUCT ret/specificationSectionDetail/specificationSectionFoodMainDetailsSection/retailerApprovalDate ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT ITEM_SPEC_OUT_OF_STORE_DT See selection criteria &amp; source column ADW_STAGE EVOLVE_KAFKA_RAW_PRODUCT ret/specificationSectionDetail/specificationSectionFoodMainDetailsSection/outOfStoreDate ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT ITEM_SPEC_FORMAT_SPEC_TYPE See selection criteria &amp; source column ADW_STAGE EVOLVE_KAFKA_RAW_PRODUCT ret/specTypeFormat/specType ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT EFFECTIVE_FROM_TS See selection criteria &amp; source column nan nan nan ADW_RDV ITEM_SPECIFICATION_EVOLVE_SAT TECHNICAL_METADATA nan nan nan nan"},{"location":"adw_rdv/rdv_example/#mapping-steps","title":"Mapping Steps","text":"<ol> <li>Make sure all product categories are captured during the build as per the selection criteria.</li> <li>Build view.</li> <li>Load transform schema to ITEM_SPECIFICATION_EVOLVE_SAT.</li> <li>End.</li> </ol>"},{"location":"adw_rdv/rdv_example/#diagram","title":"Diagram","text":"<pre><code>flowchart LR\nsubgraph \"Stage\"\nd(\"EVOLVE_KAFKA_RAW_PRODUCT\")\nend\nsubgraph \"RDV\"\nu(ITEM_SPECIFICATION_EVOLVE_SAT)\nd--&gt;u\nend\n</code></pre>"},{"location":"adw_rdv/rdv_example/#tests-checks","title":"Tests &amp; Checks","text":"<p>Tests (To be defined post handover - Duplicate as required):</p> <ul> <li> New Test Scenario 1</li> <li> New Test Scenario 2</li> <li> New Test Scenario 3</li> <li> New Test Scenario 4</li> </ul>"},{"location":"adw_stage/mapping_spec_template/","title":"INSERT STAGE OBJECT NAME HERE","text":"<p>Authors: Matt Wilkinson Revision Date: August 17, 2023</p>"},{"location":"adw_stage/mapping_spec_template/#description","title":"Description","text":"<p>Provide a brief description of the stage table, include specifics of source and the use case for ASPIRE.</p>"},{"location":"adw_stage/mapping_spec_template/#diagram","title":"Diagram","text":"<pre><code>flowchart LR\nsubgraph \"Source\"\nd(\"Source System\")\ne(\"Extract\")\nd--&gt;e\nend\nu(TARGET_STAGE_OBJECT_NAME)\ne--&gt;u\n</code></pre>"}]}